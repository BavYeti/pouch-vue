{"version":3,"sources":["webpack:///static/js/vendor.e085d3dae8fa746f711e.js","webpack:///./~/pouchdb-collate/lib/index.es.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/pouchdb-selector-core/lib/index.es.js","webpack:///./~/pouchdb-utils/lib/index-browser.es.js","webpack:///./~/argsarray/index.js","webpack:///./~/events/events.js","webpack:///./~/immediate/lib/browser.js","webpack:///./~/pouchdb-collections/lib/index.es.js","webpack:///./~/pouchdb-promise/lib/index.es.js","webpack:///./~/lie/lib/browser.js","webpack:///./~/pouchdb-binary-utils/lib/index-browser.es.js","webpack:///./~/pouchdb-live-find/lib/utils.js","webpack:///./~/pouchdb-md5/lib/index-browser.es.js","webpack:///./~/process/browser.js","webpack:///./~/spark-md5/spark-md5.js","webpack:///./~/uuid/index.js","webpack:///./~/uuid/lib/bytesToUuid.js","webpack:///./~/uuid/lib/rng-browser.js","webpack:///./~/pouchdb-browser/lib/index.es.js","webpack:///./~/pouchdb-find/lib/index-browser.es.js","webpack:///./~/pouchdb-live-find/lib/index.js","webpack:///./~/vue-pouch/index.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///./~/pouchdb-abstract-mapreduce/lib/index.es.js","webpack:///./~/pouchdb-browser/~/debug/src/browser.js","webpack:///./~/pouchdb-browser/~/debug/src/debug.js","webpack:///./~/pouchdb-browser/~/ms/index.js","webpack:///./~/pouchdb-errors/lib/index.es.js","webpack:///./~/pouchdb-live-find/lib/helpers.js","webpack:///./~/pouchdb-mapreduce-utils/lib/index.es.js","webpack:///./~/uuid/v1.js","webpack:///./~/uuid/v4.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vuvuzela/index.js"],"names":["webpackJsonp","module","__webpack_exports__","__webpack_require__","pad","str","padWith","upToLength","padding","targetLength","length","padLeft","collate","a","b","normalizeKey","ai","collationIndex","bi","stringCollate","Array","isArray","arrayCollate","objectCollate","key","Infinity","isNaN","origKey","len","i","Date","toJSON","k","hasOwnProperty","val","indexify","numToIndexableString","replace","arr","Object","keys","result","toIndexableString","objKey","SEP","parseNumber","num","originalIdx","neg","numAsString","magAsString","substring","MAGNITUDE_DIGITS","magnitude","parseInt","MIN_MAGNITUDE","ch","split","parseFloat","pop","stack","metaStack","obj","lastMetaElement","element","lastElementIndex","index","push","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","Error","Math","min","sort","ak","bk","x","id","idx","indexOf","expFormat","toExponential","magForComparison","magString","toString","factor","abs","factorStr","toFixed","defineProperty","value","d","exports","g","this","Function","eval","e","window","create","ctor","superCtor","super_","prototype","constructor","enumerable","writable","configurable","TempCtor","getFieldFromDoc","doc","parsedField","setFieldInDoc","compare","left","right","parseField","fieldName","fields","current","isCombinationalField","field","combinationFields","getKey","getValue","mergeAndedSelectors","selectors","res","forEach","selector","matcher","$eq","map","m","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","$gte","$gt","$lte","$lt","$ne","massageSelector","input","__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__","wasAnded","orOrNor","subSelector","createFieldSorter","getFieldValuesAsArray","sorting","aRow","bRow","aFieldValues","bFieldValues","collation","__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__","_id","filterInMemoryFields","rows","requestDef","inMemoryFields","filter","row","rowFilter","fieldSorter","reverse","skip","limit","slice","every","docFieldValue","matchCominationalSelector","matchSelector","userOperator","userValue","match","some","orMatchers","find","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","RegExp","test","typeMatch","call","matchesSelector","rowsMatched","$elemMatch","$allMatch","$exists","$mod","neValue","$in","$nin","$size","$all","$regex","$type","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","target","byteLength","targetArray","Uint8Array","sourceArray","set","cloneBinaryObject","size","type","webkitSlice","isPlainObject","proto","getPrototypeOf","Ctor","funcToString","objectCtorString","clone","newObject","toISOString","once","fun","called","__WEBPACK_IMPORTED_MODULE_2_argsarray___default","args","apply","toPromise","func","self","usedCB","promise","__WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__","fulfill","reject","resp","callback","err","mesg","then","pick","prop","isChromeApp","chrome","storage","local","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","addListener","db_name","emit","dbName","newValue","addEventListener","attachEvent","Changes","__WEBPACK_IMPORTED_MODULE_4_events__","_listeners","guardedConsole","method","console","arguments","flatten","arrs","concat","f","isRemote","db","_remote","upsert","docId","diffFun","get","status","docRev","_rev","newDoc","updated","rev","tryAndPut","put","assign$1","__WEBPACK_IMPORTED_MODULE_0_uuid__","__WEBPACK_IMPORTED_MODULE_0_uuid___default","n","__WEBPACK_IMPORTED_MODULE_2_argsarray__","__WEBPACK_IMPORTED_MODULE_5_inherits__","__WEBPACK_IMPORTED_MODULE_5_inherits___default","__WEBPACK_IMPORTED_MODULE_6_immediate__","__WEBPACK_IMPORTED_MODULE_6_immediate___default","localStorage","setItem","getItem","opts","eventFunction","onError","inprogress","changesOpts","changes","on","c","seq","since","cancelled","onChange","removeListener","notifyLocalWindows","notify","assign","to","nextSource","nextKey","hasName","name","v4","argsArray","EventEmitter","_events","_maxListeners","undefined","isFunction","arg","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","er","handler","listeners","error","context","listener","newListener","warned","trace","fired","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","global","nextTick","draining","oldQueue","queue","immediate","task","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","mangle","unmangle","Map$1","_store","Set$1","array","add","ExportedSet","ExportedMap","mangled","has","delete","cb","Symbol","Map","Set","getOwnPropertyDescriptor","species","__WEBPACK_IMPORTED_MODULE_0_lie__","__WEBPACK_IMPORTED_MODULE_0_lie___default","PouchPromise","Promise","INTERNAL","resolver","state","PENDING","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","returnValue","handlers","resolve","getThen","thenable","onSuccess","tryToUnwrap","tryCatch","out","reason","all","iterable","values","resolved","resolveFromAll","outValue","race","response","REJECTED","FULFILLED","createBlob","parts","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","thisAtob","readAsArrayBuffer","blob","FileReader","FileReaderSync","reader","onloadend","thisBtoa","atob","btoa","selectorCore","getUserFields","userFields","selectorFields","sortFields","leftIdx","Number","MAX_VALUE","rightIdx","sortOrder","massageSort","stringMd5","string","__WEBPACK_IMPORTED_MODULE_1_spark_md5___default","hash","__WEBPACK_IMPORTED_MODULE_1_spark_md5__","defaultSetTimout","defaultClearTimeout","runTimeout","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","currentQueue","queueIndex","drainQueue","timeout","run","Item","noop","process","title","browser","env","argv","version","versions","off","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","factory","md5cycle","md5blk","s","md5blks","md5blk_array","md51","tail","tmp","lo","hi","md51_array","subarray","rhex","j","hex_chr","hex","join","toUtf8","unescape","encodeURIComponent","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","String","fromCharCode","concatenateArrayBuffers","first","second","buffer","hexToBinaryString","bytes","substr","SparkMD5","reset","y","lsw","clamp","max","from","begin","end","appendBinary","contents","_buff","_length","_hash","raw","ret","_finish","getState","setState","destroy","hashBinary","content","v1","uuid","bytesToUuid","offset","bth","byteToHex","rng","crypto","msCrypto","getRandomValues","rnds8","rnds","r","random","PouchPromise$1","logApiCall","logArgs","origCallback","responseArgs","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","identityFunction","formatResultForOpenRevsGet","ok","bulkGet","collapseResultsAndFinish","results","perDocResults","docs","info","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","docIdx","docRequests","requestsById","docOpts","open_revs","request","formatResult","param","requests","__WEBPACK_IMPORTED_MODULE_3_events__","randomNumber","maxTimeout","defaultBackOff","explainError","PouchError","message","createError","CustomPouchError","p","generateErrorFromResponse","UNKNOWN_ERROR","tryFilter","req","msg","BAD_REQUEST","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","invalidIdError","INVALID_ID","RESERVED_ID","MISSING_ID","ee","parseDesignDocFunctionName","normalizeDesignDocFunctionName","normalized","parseUri","parser","exec","uri","encoded","decodeURIComponent","qName","qParser","$0","$1","$2","scopeEval","source","scope","toLowerCase","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","collectLeaves","leaves","isLeaf","acc","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","item","comparator","mid","low","high","insertSorted","pathToTree","path","numStemmed","root","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","depth","stemmedRevs","stemmed","merge","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","tryCatchInChangeListener","Changes$2","onDestroy","cancel","complete","isCancelled","bind","validateChanges","processChange","changeList","style","_conflicts","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","_revisions","start","computeHeight","height","edges","prnt","rev$$1","edge","allDocsKeysQuery","api","descending","_allDocs","finalResults","subOpts","$inject_Object_assign","optKey","total_rows","doNextCompaction","_compactionQueue","catch","last_seq","_compact","__WEBPACK_IMPORTED_MODULE_5_immediate___default","shift","attachmentNameError","charAt","AbstractPouchDB","TaskQueue$1","parseAdapter","adapter","adapters","PouchDB$3","preferredAdapters","prefix","adapterName","use_prefix","prepareForDestruction","onDestroyed","from_constructor","onClosed","__opts","auto_compaction","prefixedName","backend","_adapter","valid","fail","ready","debugPouch","PouchDB","debug","__WEBPACK_IMPORTED_MODULE_6_debug___default","logs","logId","compare$1","evalFilter","evalView","validate","filterName","normalize","view","shouldFilter","changesHandler","doc_ids","viewName","ddoc","mapFun","views","MISSING_DOC","doChanges","filterFun","filters","applyChangesFilterPlugin","_changesFilterPlugin","toObject","reduce","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","arrayBufferToBinaryString","binary","readAsBinaryString","hasBinaryString","blobToBinaryString","blobOrBuffer","blobToBase64","base64","rawToBase64","sliceBlob","appendBlob","arrayBuffer","appendString","binaryMd5","next","setImmediateShim","loadNextChunk","done","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","ceil","__WEBPACK_IMPORTED_MODULE_7_spark_md5___default","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","prev","writeDoc","previousWinningRev","previouslyDeleted","isRoot","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$1","winningRevIsDeleted","delta","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","safeJsonParse","JSON","parse","__WEBPACK_IMPORTED_MODULE_8_vuvuzela___default","safeJsonStringify","json","stringify","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","body","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","attNames","compactRevs","count","deleteOrphanedAttachments","possiblyOrphanedDigests","attAndSeqStore","IDBKeyRange","bound","attStore","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","openCursor","only","event","cursor","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","startTransaction","DOC_STORE","LOCAL_STORE","META_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","metaDoc","updateDocCountIfReady","verifyAttachments","preconditionErrored","fetchExistingDocs","onAllDocsProcessed","allDocsProcessed","idbProcessDocs","revs_limit","docCount","docCountDelta","numFetched","readMetadata","_meta","verifyAttachment","MISSING_STUB","finish","digests","filename","attErr","isUpdate","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","insertAttachmentMappings","putReq","onerror","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","runBatchedCursor","keyRange","batchSize","onBatch","onGetAll","valuesBatch","keysBatch","pseudoCursor","onGetAllKeys","continuePseudoCursor","newKeyRange","lastKey","upper","upperOpen","code","lowerBound","getAll","getAllKeys","onCursor","useGetAll","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","fetchDocAsynchronously","docIdRevIndex","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","onTxnComplete","startkey","endkey","inclusive_end","keyRangeError","checkBlobSupport","DETECT_BLOB_SUPPORT_STORE","matchedChrome","navigator","userAgent","matchedEdge","countDocs","tryCode","applyNext","running","enqueueTask","action","processMetadataAndWinningDoc","winningDoc","lastSeq","filtered","numResults","returnDocs","onBatchDone","winningDocs","metadatas","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","docIds","docIdsToMetadata","continuous","return_docs","objectStores","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","range","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","onGetMetadataSeq","metadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","updateSeq","doc_count","update_seq","idb_attachment_format","_changes","_close","close","cachedDBs","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","completeSetup","storedMetaDoc","storeMetaDocIfReady","instanceKey","onversionchange","blobSupportPromise","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","select","table","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","websqlBulkDocs","websqlChanges","_name","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","params","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","_","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","digestSeqs","digestSeqPairs","pair","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","onGetVersion","dbVersion","meta","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","dbid","tasks","nextMigration","fetchVersion","db_version","getMaxSeq","latest$$1","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","theSeq","theDocCount","websql_encoding","latestRev","totalRows","criteria","selectStmt","reportChange","maxSeq","escaped","putLocal","rowsAffected","removeLocal","store","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","wrappedFetch","wrappedPromise","fetch","fetchRequest","options","timer","headers","Headers","fetchOptions","credentials","processData","url","fetchResponse","statusCode","text","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","XMLHttpRequest","exception","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","ajax$1","hasXhr","defaultBody","ajaxCore$1","v","missing","res$2","cache","ajax","ua","isSafari","isIE","isEdge","shouldCacheBust","hasArgs","now","pool","promiseFactories","runNext","runNextBatch","thisErr","readAttachmentsAsBlobOrBuffer","encodeDocId","preprocessAttachments$2","hasUrlPrefix","protocol","getHost","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","HttpPouch","ajax$$1","userOpts","reqAjax","ajaxOpts","defaultHeaders","_ajax","ajaxPromise","adapterFun$$1","setup","skipSetup","skip_setup","setupPromise","dbUrl","encodeAttachmentId","attachmentId","nAuth","token","Authorization","uuid$$1","compact","ping","compact_running","interval","doBulkGet","doBulkGetShim","MAX_SIMULTANEOUS_REVS","numBatches","batchNum","supportsBulkGet","supportsBulkGetMap","fetchAttachments","filenames","fetchAllAttachments","docOrDocs","revs_info","remove","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","Content-Type","_put","allDocs","start_key","end_key","paramStr","batch_size","CHANGES_BATCH_SIZE","heartbeat","DEFAULT_HEARTBEAT","requestTimeout","CHANGES_TIMEOUT_BUFFER","leftToFetch","feed","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","revsDiff","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","log","TaskQueue$2","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","cachedViews","viewSignature","_cachedViews","promiseForView","diffFunction","fullViewName","depDbs","depDbName","registerDependentDatabase","lastSeqDoc","parseViewName","isGenOne","emitError","getBuiltIn","reduceFunString","builtInReduce","_sum","_count","_stats","mapper","origMap","reducer","builtIn","ddocValidator","abstract","viewCleanup","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRev","getDocs","getAllDocs","bulkGetOpts","bulkGetResponse","bulkGetInfo","resultDocs","Boolean","hasAttachments","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","unshift","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","hasSessionId","LOWEST_SEQ","sessionId","props","rest","isForbiddenError","floor","backOff","retry","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","initCheckpointer","checkpointer","repId","checkpointOpts","writeSourceCheckpoint","writeTargetCheckpoint","writeDocs","changedDocs","currentBatch","bulkOpts","bulkDocs","completeReplication","errorsById","errorsNo","doc_write_failures","docs_written","errors","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","pendingBatch","live","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","sync$1","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removeAll","isChange","isDenied","isPaused","isActive","removed","addOneListener","canceled","optsPush","optsPull","pull","success","replication","sync","other","__WEBPACK_IMPORTED_MODULE_1_lie__","__WEBPACK_IMPORTED_MODULE_1_lie___default","__WEBPACK_IMPORTED_MODULE_4_inherits__","__WEBPACK_IMPORTED_MODULE_4_inherits___default","__WEBPACK_IMPORTED_MODULE_5_immediate__","__WEBPACK_IMPORTED_MODULE_6_debug__","__WEBPACK_IMPORTED_MODULE_7_spark_md5__","__WEBPACK_IMPORTED_MODULE_8_vuvuzela__","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","newPromise","post","putDoc","force","oldRevId","oldRevNum","newRevNum","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","maxHeight","revTree","candidates","promises","onComplete","finishOpenRevs","existing","splittedRev","revNo","currentPath","hashIndex","indexOfRev","howMany","_revs_info","incompatibleOpt","_type","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","usePrefix","deletedMap","trueName","execute","eventEmitter","Pouch","destructListeners","_destructionListeners","dbList","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","platform","IDBPouch","WebSqlPouch","HttpPouch$1","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","sumsqr","_sumsqr","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","metaDocId","defaultMetaDoc","docData","saveKeyValues","listOfDocsToPersist","docsToPersist","getQueue","updateView","updateViewInQueue","mapResults","processNextBatch","currentSeq","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","shouldReduce","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","stale","abstractQuery","mapreduce","updateTarget","updateSource","readOnlySource","comparisons","targetDoc","sourceDoc","1","cleanup","_readyCalled","massageCreateIndexRequest","explain","getIndexes","deleteIndex","indexDef","getArguments","mergeObjects","__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__","oneArrayIsSubArrayOfOther","oneArrayIsStrictSubArrayOfOther","oneSetIsSubArrayOfOther","arrayToObject","maxScore","score","arrayEquals","arr1","arr2","createDeepMultiMapper","toEmit","iLen","createDeepSingleMapper","createShallowSingleMapper","createShallowMultiMapper","checkShallow","createMapper","isShallow","isSingle","mapFunDef","massageUseIndex","useIndex","cleanedUseIndex","massageIndexDef","getKeyFromDoc","def","filterInclusiveStart","targetValue","indexFields","docKey","__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__","reverseOptions","newOpts","inclusive_start","validateIndex","ascFields","validateSort","defaultUsed","noneIdSorts","sortItem","validateFindRequest","createIndex$1","getMd5","__WEBPACK_IMPORTED_MODULE_5_pouchdb_md5__","updateDdoc","language","hasInvalidLanguage","viewExists","originalIndexDef","ddocId","signature","abstractMapper","getIndexes$1","indexes","checkFieldInIndex","userOperatorLosesPrecision","sortFieldsByIndex","aIdx","bIdx","getBasicInMemoryFields","needToFilterInMemory","getInMemoryFieldsFromNe","getInMemoryFields","coreInMemoryFields","checkIndexFieldsMatch","sortMatches","selectorMatches","isNonLogicalMatcher","logicalMatchers","checkFieldsLogicallySound","firstField","matcherKey","checkIndexMatches","findMatchingIndexes","findBestMatchingIndex","scoreIndex","indexField","userFieldsMap","matchingIndexes","defaultIndex","useIndexDdoc","useIndexName","getSingleFieldQueryOptsFor","getSingleFieldCoreQueryPlan","combinedOpts","userOperators","newQueryOpts","queryOpts","getMultiFieldCoreQueryPlan","getMultiFieldQueryOpts","inclusiveStart","COLLATE_LO","COLLATE_HI","usingGtlt","previousKeys","previousWasEq","previousWasSame","getDefaultQueryPlan","getCoreQueryPlan","planQuery","userFieldsRes","use_index","coreQueryPlan","indexToSignature","doAllDocs","originalOpts","find$1","getIndexesRes","queryPlan","indexToUse","warning","explain$1","dbname","bookmark","deleteIndex$1","deltaFun","__WEBPACK_IMPORTED_MODULE_3_pouchdb_abstract_mapreduce__","subArr","￿","createIndexAsCallback","findAsCallback","explainAsCallback","getIndexesAsCallback","deleteIndexAsCallback","liveFind","changeHandler","errorHandler","_activeQueries","_changeListener","filterDoc","helpers","memoryFilter","pickFields","utils","stripId","stripRev","addResult","lookup","addAction","removeAction","outputDoc","updateAction","aggregate","docList","formatList","sortList","sortFn","paginate","findRequest","installSelectorReplicationPlugin","pouch","oldReplicate","repOptions","sourceAjax","ajaxOps","includes","vue","defaultDB","defaultUsername","defaultPassword","databases","vuePouch","destroyed","_liveFinds","lf","created","fetchSession","database","getSession","getUser","userCtx","vm","$pouch","authError","login","warn","defineReactive","util","useAuth","dbString","gotAuth","createUser","signup","resetAuth","logout","localDB","remoteDB","_options","numPaused","loading","$databases","pouchOptions","$options","pouchFn","$data","$watch","config","databaseParam","aggregateCache","update","mixin","install","Vue","mergeOptions","isUndef","isDef","isTrue","isFalse","isPrimitive","_toString","isRegExp","isValidArrayIndex","isFinite","toNumber","makeMap","expectsLowerCase","hasOwn","fn","boundFn","toArray","extend","_from","looseEqual","isObjectA","isObjectB","isArrayA","isArrayB","keysA","keysB","looseIndexOf","isReserved","parsePath","bailRE","segments","handleError","inBrowser","isNative","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","__proto__","copyAugment","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","dep","property","getter","setter","childOb","depend","dependArray","newVal","del","mergeData","toVal","fromVal","mergeDataOrFn","parentVal","childVal","instanceData","defaultData","mergeHook","mergeAssets","normalizeProps","camelize","normalizeInject","inject","normalizeDirectives","dirs","directives","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","hyphenate","getPropDefaultValue","prevShouldConvert","default","_props","getType","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","children","elm","componentOptions","asyncFactory","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","remove$$1","cur","old","normalizeEvent","capture","passive","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","extractPropsFromVNodeData","attrs","altKey","checkProp","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","_isVList","ensureCtor","comp","base","__esModule","createAsyncPlaceholder","createEmptyVNode","asyncMeta","resolveAsyncComponent","baseCtor","errorComp","loadingComp","contexts","forceRender","$forceUpdate","component","delay","getFirstComponentChild","initEvents","_hasHookEvent","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","isWhitespace","resolveScopedSlots","initLifecycle","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","hydrating","$el","render","callHook","updateComponent","_update","_render","Watcher","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","$emit","resetSchedulerState","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","queueActivatedComponent","queueWatcher","traverse","seenObjects","clear","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","getData","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","createWatcher","keyOrFn","initProvide","provide","_provided","initInjections","resolveInject","hasSymbol","Reflect","ownKeys","provideKey","createFunctionalComponent","mergeProps","_context","h","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","functional","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","staticRenderFns","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","$event","renderStatic","isInFor","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","initRender","renderContext","_c","$createElement","parentData","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","extended","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","use","installedPlugins","_installedPlugins","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","childNode","mergeClassData","renderClass","staticClass","class","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","isAsyncPlaceholder","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","lastFilterIndex","trim","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","pluckModuleFunction","modules","addProp","addAttr","addDirective","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","index$1","expressionPos","expressionEndPos","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isChrome","add$1","oldHandler","target$1","ev","remove$2","supportsPassive","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","enter","toggleDisplay","_leaveCb","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","isMultiple","option","selectedIndex","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","dx","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","html","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","rest$1","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","template","endPre","pre","inVPre","platformIsPreTag","inPre","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","postTransforms","currentParent","preserveWhitespace","comments","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","wrapListeners","bind$1","wrapData","generate","ast","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData$2","genChildren","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","getNormalizationType","maybeComponent","genNode","needsNormalization","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","createCompileToFunctionFn","compile","compiled","fnGenErrors","getOuterHTML","outerHTML","container","cloneNode","innerHTML","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","isAndroid","isIOS","_isServer","_Set","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","nextTickHandler","pending","copies","callbacks","timerFunc","logError","counter","textNode","_resolve","uid","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","prototypeAccessors","defineProperties","uid$2","expOrFn","deep","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","$mount","keepAlive","mountedNode","prepatch","insert","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","patternTypes","KeepAlive","include","exclude","builtInComponents","configDef","ssrContext","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","_scopeId","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","isTextInputType","vmodel","model$1","_vOptions","prevOptions","o","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","c$1","beforeUpdate","hasMove","offsetHeight","propertyName","_hasMove","platformComponents","decoder","div","regexEscapeRE","klass$1","style$1","modules$1","directives$1","baseOptions","he","decode","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","isIgnoreNewlineTag","esc","tab","space","up","down","genGuard","stop","prevent","ctrl","alt","middle","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","ref$1","idToTemplate","mount","TaskQueue","__WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__","__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__","createAbstractMapReduce","__WEBPACK_IMPORTED_MODULE_3_pouchdb_binary_utils__","__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__","__WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__","useColors","firebug","formatArgs","humanize","color","lastC","save","namespaces","removeItem","load","NODE_ENV","DEBUG","colors","formatters","enable","selectColor","createDebug","enabled","curr","ms","prevTime","coerce","format","formatter","names","skips","disable","fmtShort","round","fmtLong","plural","long","__WEBPACK_IMPORTED_MODULE_0_inherits__","directions","__WEBPACK_IMPORTED_MODULE_1_argsarray___default","__WEBPACK_IMPORTED_MODULE_0_pouchdb_collections__","__WEBPACK_IMPORTED_MODULE_1_argsarray__","__WEBPACK_IMPORTED_MODULE_3_inherits__","__WEBPACK_IMPORTED_MODULE_3_inherits___default","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","_nodeId","_seedBytes","ii","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes"],"mappings":"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","file":"static/js/vendor.e085d3dae8fa746f711e.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"collate\", function() { return collate; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"normalizeKey\", function() { return normalizeKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toIndexableString\", function() { return toIndexableString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseIndexableString\", function() { return parseIndexableString; });\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nif (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"massageSelector\", function() { return massageSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"matchesSelector\", function() { return matchesSelector; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterInMemoryFields\", function() { return filterInMemoryFields; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createFieldSorter\", function() { return createFieldSorter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rowFilter\", function() { return rowFilter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isCombinationalField\", function() { return isCombinationalField; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getKey\", function() { return getKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getValue\", function() { return getValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getFieldFromDoc\", function() { return getFieldFromDoc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setFieldInDoc\", function() { return setFieldInDoc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"compare\", function() { return compare; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"parseField\", function() { return parseField; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__ = __webpack_require__(0);\n\n\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction setFieldInDoc(doc, parsedField, value) {\n  for (var i = 0, len = parsedField.length; i < len-1; i++) {\n    var elem = parsedField[i];\n    doc = doc[elem] = {};\n  }\n  doc[parsedField[len-1]] = value;\n}\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"a\" /* clone */])(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_pouchdb_collate__[\"collate\"])(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\n\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export adapterFun */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return assign$1; });\n/* unused harmony export bulkGetShim */\n/* unused harmony export changesHandler */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return clone; });\n/* unused harmony export defaultBackOff */\n/* unused harmony export explainError */\n/* unused harmony export filterChange */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return flatten; });\n/* unused harmony export functionName */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return guardedConsole; });\n/* unused harmony export hasLocalStorage */\n/* unused harmony export invalidIdError */\n/* unused harmony export isChromeApp */\n/* unused harmony export isCordova */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return isRemote; });\n/* unused harmony export listenerCount */\n/* unused harmony export normalizeDdocFunctionName */\n/* unused harmony export once */\n/* unused harmony export parseDdocFunctionName */\n/* unused harmony export parseUri */\n/* unused harmony export pick */\n/* unused harmony export rev */\n/* unused harmony export scopeEval */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return toPromise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return upsert; });\n/* unused harmony export uuid */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_uuid__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_argsarray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_pouchdb_collections__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_events__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_events___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_events__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_inherits__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_immediate__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_immediate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_immediate__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__ = __webpack_require__(31);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_6_immediate___default.a; });\n\n\n\n\n\n\n\n\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */](function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(__WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    if (this._closed) {\n      return __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */].reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */].reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */](function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new __WEBPACK_IMPORTED_MODULE_3_pouchdb_collections__[\"a\" /* Map */]();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\n__WEBPACK_IMPORTED_MODULE_5_inherits___default()(Changes, __WEBPACK_IMPORTED_MODULE_4_events__[\"EventEmitter\"]);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  __WEBPACK_IMPORTED_MODULE_4_events__[\"EventEmitter\"].call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        __WEBPACK_IMPORTED_MODULE_6_immediate___default()(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  __WEBPACK_IMPORTED_MODULE_4_events__[\"EventEmitter\"].prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar assign$1 = assign;\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"a\" /* createError */])(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"b\" /* BAD_REQUEST */], msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\nvar res$1 = res;\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"a\" /* createError */])(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"c\" /* MISSING_ID */]);\n  } else if (typeof id !== 'string') {\n    err = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"a\" /* createError */])(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"d\" /* INVALID_ID */]);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"a\" /* createError */])(__WEBPACK_IMPORTED_MODULE_7_pouchdb_errors__[\"e\" /* RESERVED_ID */]);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\nfunction isCordova() {\n  return (typeof cordova !== \"undefined\" ||\n  typeof PhoneGap !== \"undefined\" ||\n  typeof phonegap !== \"undefined\");\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 __WEBPACK_IMPORTED_MODULE_4_events__[\"EventEmitter\"].listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */](function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4;\n\n\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ExportedSet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ExportedMap; });\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lie__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lie__);\n\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : __WEBPACK_IMPORTED_MODULE_0_lie___default.a;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (PouchPromise);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar immediate = __webpack_require__(7);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export atob */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return thisBtoa; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return b64ToBluffer; });\n/* unused harmony export binaryStringToArrayBuffer */\n/* unused harmony export binaryStringToBlobOrBuffer */\n/* unused harmony export blob */\n/* unused harmony export blobOrBufferToBase64 */\n/* unused harmony export blobOrBufferToBinaryString */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return readAsArrayBuffer; });\n/* unused harmony export readAsBinaryString */\n/* unused harmony export typedBuffer */\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\nfunction typedBuffer() {\n}\n\n\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar selectorCore = __webpack_require__(3);\nvar getKey = selectorCore.getKey;\nvar getFieldFromDoc = selectorCore.getFieldFromDoc;\nvar setFieldInDoc = selectorCore.setFieldInDoc;\nvar parseField = selectorCore.parseField;\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nexports.getUserFields = function(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(getKey) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(getKey)\n  };\n};\n\n// normalize the \"sort\" value\nexports.massageSort = function(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n};\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nexports.pick = function(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = parseField(arr[i]);\n    var value = getFieldFromDoc(obj, parsedField);\n    if (typeof value !== 'undefined') {\n      setFieldInDoc(res, parsedField, value);\n    }\n  }\n  return res;\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export binaryMd5 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return stringMd5; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_pouchdb_binary_utils__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_spark_md5__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_spark_md5___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_spark_md5__);\n\n\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_binary_utils__[\"a\" /* btoa */])(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_binary_utils__[\"b\" /* readAsArrayBuffer */])(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new __WEBPACK_IMPORTED_MODULE_1_spark_md5___default.a() : new __WEBPACK_IMPORTED_MODULE_1_spark_md5___default.a.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return __WEBPACK_IMPORTED_MODULE_1_spark_md5___default.a.hash(string);\n}\n\n\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function (factory) {\n    if (true) {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar v1 = __webpack_require__(34);\nvar v4 = __webpack_require__(35);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_uuid___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_uuid__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lie__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lie___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lie__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_argsarray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_argsarray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_events__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_events___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_events__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_inherits__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immediate__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_immediate___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_immediate__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_debug__ = __webpack_require__(28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_debug___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_debug__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_spark_md5__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_spark_md5___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_spark_md5__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vuvuzela__ = __webpack_require__(38);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_8_vuvuzela__);\n\n\n\n\n\n\n\n\n\n\n/* istanbul ignore next */\nvar PouchPromise$1 = typeof Promise === 'function' ? Promise : __WEBPACK_IMPORTED_MODULE_1_lie___default.a;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise$1(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(__WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    if (this._closed) {\n      return PouchPromise$1.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise$1.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise$1(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Changes, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        __WEBPACK_IMPORTED_MODULE_5_immediate___default()(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise$1(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = __WEBPACK_IMPORTED_MODULE_0_uuid___default.a.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Changes$2, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.normalize(opts);\n    if (PouchDB$3._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB$3._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise$1.all(keys.map(function (key) {\n    var subOpts = $inject_Object_assign({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise$1(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(AbstractPouchDB, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\n\nfunction AbstractPouchDB() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise$1.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$3.adapters;\n  var preferredAdapters = PouchDB$3.preferredAdapters;\n  var prefix = PouchDB$3.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchDB$3, AbstractPouchDB);\nfunction PouchDB$3(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$3)) {\n    return new PouchDB$3(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$3.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB$3.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB$3.adapters[opts.adapter] ||\n      !PouchDB$3.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$3.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$3.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$3.adapters = {};\nPouchDB$3.preferredAdapters = [];\n\nPouchDB$3.prefix = '_pouch_';\n\nvar eventEmitter = new __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(__WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype).forEach(function (key) {\n    if (typeof __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB$3);\n\nPouchDB$3.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$3.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$3.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$3.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$3);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$3.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB$3.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB$3;\n};\n\nPouchDB$3.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB$3.call(this, name, opts);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_inherits___default()(PouchAlt, PouchDB$3);\n\n  PouchAlt.preferredAdapters = PouchDB$3.preferredAdapters.slice();\n  Object.keys(PouchDB$3).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$3[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.3.4\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = __WEBPACK_IMPORTED_MODULE_6_debug___default.a;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = __WEBPACK_IMPORTED_MODULE_6_debug___default()('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(applyChangesFilterPlugin);\n\nPouchDB$3.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a() : new __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return __WEBPACK_IMPORTED_MODULE_7_spark_md5___default.a.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default.a.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return __WEBPACK_IMPORTED_MODULE_8_vuvuzela___default.a.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise$1.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise$1.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise$1(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n  var keyRangeError = keyRange && keyRange.error;\n  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n      keyRangeError.code === 0)) {\n    // DataError with error code 0 indicates start is less than end, so\n    // can just do an empty query. Else need to throw\n    return callback(createError(IDB_ERROR,\n      keyRangeError.name, keyRangeError.message));\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (opts.deleted === 'ok') {\n      results.push(row);\n      // deleted docs are okay with \"keys\" requests\n      if (deleted) {\n        row.value.deleted = true;\n        row.doc = null;\n      } else if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    } else if (!deleted && skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    callback(null, {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    });\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise$1(function (resolve) {\n    var blob = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nvar IDBPouch = function (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n};\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (opts.deleted === 'ok') {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              continue;\n            }\n          }\n          results.push(doc);\n        }\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = $inject_Object_assign({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nvar WebSqlPouch = function (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n};\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise$1(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise$1.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise$1(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise$1.resolve();\n  }\n\n  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise$1(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise$1.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise$1.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise$1.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise$1(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise$1.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nvar HttpPouch$1 = function (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n};\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return __WEBPACK_IMPORTED_MODULE_2_argsarray___default()(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise$1.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise$1.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise$1.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise$1.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              __WEBPACK_IMPORTED_MODULE_5_immediate___default()(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise$1.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise$1.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise$1.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise$1.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    if (this.readOnlySource) {\n      return PouchPromise$1.resolve(true);\n    }\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.readOnlySource = true;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise$1.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise$1(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise$1.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Replication, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\nfunction Replication() {\n  __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"].call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\n__WEBPACK_IMPORTED_MODULE_4_inherits___default()(Sync, __WEBPACK_IMPORTED_MODULE_3_events__[\"EventEmitter\"]);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise$1.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$3.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (PouchDB$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ }),\n/* 20 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(process) {/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_pouchdb_abstract_mapreduce__ = __webpack_require__(27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_pouchdb_md5__ = __webpack_require__(13);\n\n\n\n\n\n\n\n// we restucture the supplied JSON considerably, because the official\n// Mango API is very particular about a lot of this stuff, but we like\n// to be liberal with what we accept in order to prevent mental\n// breakdowns in our users\nfunction massageCreateIndexRequest(requestDef) {\n  requestDef = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"a\" /* clone */])(requestDef);\n\n  if (!requestDef.index) {\n    requestDef.index = {};\n  }\n\n  ['type', 'name', 'ddoc'].forEach(function (key) {\n    if (requestDef.index[key]) {\n      requestDef[key] = requestDef.index[key];\n      delete requestDef.index[key];\n    }\n  });\n\n  if (requestDef.fields) {\n    requestDef.index.fields = requestDef.fields;\n    delete requestDef.fields;\n  }\n\n  if (!requestDef.type) {\n    requestDef.type = 'json';\n  }\n  return requestDef;\n}\n\nfunction createIndex(db, requestDef, callback) {\n  requestDef = massageCreateIndexRequest(requestDef);\n\n  db.request({\n    method: 'POST',\n    url: '_index',\n    body: requestDef\n  }, callback);\n}\n\nfunction find(db, requestDef, callback) {\n  db.request({\n    method: 'POST',\n    url: '_find',\n    body: requestDef\n  }, callback);\n}\n\nfunction explain(db, requestDef, callback) {\n  db.request({\n    method: 'POST',\n    url: '_explain',\n    body: requestDef\n  }, callback);\n}\n\nfunction getIndexes(db, callback) {\n  db.request({\n    method: 'GET',\n    url: '_index'\n  }, callback);\n}\n\nfunction deleteIndex(db, indexDef, callback) {\n\n\n  var ddoc = indexDef.ddoc;\n  var type = indexDef.type || 'json';\n  var name = indexDef.name;\n\n  if (!ddoc) {\n    return callback(new Error('you must provide an index\\'s ddoc'));\n  }\n\n  if (!name) {\n    return callback(new Error('you must provide an index\\'s name'));\n  }\n\n  var url = '_index/' + [ddoc, type, name].map(encodeURIComponent).join('/');\n\n  db.request({\n    method: 'DELETE',\n    url: url\n  }, callback);\n}\n\nfunction getArguments(fun) {\n  return function () {\n    var len = arguments.length;\n    var args = new Array(len);\n    var i = -1;\n    while (++i < len) {\n      args[i] = arguments[i];\n    }\n    return fun.call(this, args);\n  };\n}\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    promisedCallback(promise, cb);\n    return promise;\n  });\n}\n\nfunction promisedCallback(promise, callback) {\n  promise.then(function (res) {\n    process.nextTick(function () {\n      callback(null, res);\n    });\n  }, function (reason) {\n    process.nextTick(function () {\n      callback(reason);\n    });\n  });\n  return promise;\n}\n\nvar flatten = getArguments(function (args) {\n  var res = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    var subArr = args[i];\n    if (Array.isArray(subArr)) {\n      res = res.concat(flatten.apply(null, subArr));\n    } else {\n      res.push(subArr);\n    }\n  }\n  return res;\n});\n\nfunction mergeObjects(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"b\" /* assign */])(res, arr[i]);\n  }\n  return res;\n}\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"parseField\"])(arr[i]);\n    var value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getFieldFromDoc\"])(obj, parsedField);\n    if (typeof value !== 'undefined') {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"setFieldInDoc\"])(res, parsedField, value);\n    }\n  }\n  return res;\n}\n\n// e.g. ['a'], ['a', 'b'] is true, but ['b'], ['a', 'b'] is false\nfunction oneArrayIsSubArrayOfOther(left, right) {\n\n  for (var i = 0, len = Math.min(left.length, right.length); i < len; i++) {\n    if (left[i] !== right[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// e.g.['a', 'b', 'c'], ['a', 'b'] is false\nfunction oneArrayIsStrictSubArrayOfOther(left, right) {\n\n  if (left.length > right.length) {\n    return false;\n  }\n\n  return oneArrayIsSubArrayOfOther(left, right);\n}\n\n// same as above, but treat the left array as an unordered set\n// e.g. ['b', 'a'], ['a', 'b', 'c'] is true, but ['c'], ['a', 'b', 'c'] is false\nfunction oneSetIsSubArrayOfOther(left, right) {\n  left = left.slice();\n  for (var i = 0, len = right.length; i < len; i++) {\n    var field = right[i];\n    if (!left.length) {\n      break;\n    }\n    var leftIdx = left.indexOf(field);\n    if (leftIdx === -1) {\n      return false;\n    } else {\n      left.splice(leftIdx, 1);\n    }\n  }\n  return true;\n}\n\nfunction arrayToObject(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res[arr[i]] = true;\n  }\n  return res;\n}\n\nfunction max(arr, fun) {\n  var max = null;\n  var maxScore = -1;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n    var score = fun(element);\n    if (score > maxScore) {\n      maxScore = score;\n      max = element;\n    }\n  }\n  return max;\n}\n\nfunction arrayEquals(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (var i = 0, len = arr1.length; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction uniq(arr) {\n  var obj = {};\n  for (var i = 0; i < arr.length; i++) {\n    obj['$' + arr[i]] = true;\n  }\n  return Object.keys(obj).map(function (key) {\n    return key.substring(1);\n  });\n}\n\n//\n// One thing about these mappers:\n//\n// Per the advice of John-David Dalton (http://youtu.be/NthmeLEhDDM),\n// what you want to do in this case is optimize for the smallest possible\n// function, since that's the thing that gets run over and over again.\n//\n// This code would be a lot simpler if all the if/elses were inside\n// the function, but it would also be a lot less performant.\n//\n\n\nfunction createDeepMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, iLen = fields.length; i < iLen; i++) {\n      var parsedField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"parseField\"])(fields[i]);\n      var value = doc;\n      for (var j = 0, jLen = parsedField.length; j < jLen; j++) {\n        var key = parsedField[j];\n        value = value[key];\n        if (!value) {\n          return; // don't emit\n        }\n      }\n      toEmit.push(value);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction createDeepSingleMapper(field, emit) {\n  var parsedField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"parseField\"])(field);\n  return function (doc) {\n    var value = doc;\n    for (var i = 0, len = parsedField.length; i < len; i++) {\n      var key = parsedField[i];\n      value = value[key];\n      if (!value) {\n        return; // do nothing\n      }\n    }\n    emit(value);\n  };\n}\n\nfunction createShallowSingleMapper(field, emit) {\n  return function (doc) {\n    emit(doc[field]);\n  };\n}\n\nfunction createShallowMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, len = fields.length; i < len; i++) {\n      toEmit.push(doc[fields[i]]);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction checkShallow(fields) {\n  for (var i = 0, len = fields.length; i < len; i++) {\n    var field = fields[i];\n    if (field.indexOf('.') !== -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createMapper(fields, emit) {\n  var isShallow = checkShallow(fields);\n  var isSingle = fields.length === 1;\n\n  // notice we try to optimize for the most common case,\n  // i.e. single shallow indexes\n  if (isShallow) {\n    if (isSingle) {\n      return createShallowSingleMapper(fields[0], emit);\n    } else { // multi\n      return createShallowMultiMapper(fields, emit);\n    }\n  } else { // deep\n    if (isSingle) {\n      return createDeepSingleMapper(fields[0], emit);\n    } else { // multi\n      return createDeepMultiMapper(fields, emit);\n    }\n  }\n}\n\nfunction mapper(mapFunDef, emit) {\n  // mapFunDef is a list of fields\n\n  var fields = Object.keys(mapFunDef.fields);\n\n  return createMapper(fields, emit);\n}\n\n/* istanbul ignore next */\nfunction reducer(/*reduceFunDef*/) {\n  throw new Error('reduce not supported');\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var view = ddoc.views[viewName];\n  // This doesn't actually need to be here apparently, but\n  // I feel safer keeping it.\n  /* istanbul ignore if */\n  if (!view.map || !view.map.fields) {\n    throw new Error('ddoc ' + ddoc._id +' with view ' + viewName +\n      ' doesn\\'t have map.fields defined. ' +\n      'maybe it wasn\\'t created by this plugin?');\n  }\n}\n\nvar abstractMapper = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_pouchdb_abstract_mapreduce__[\"a\" /* default */])(\n  /* localDocName */ 'indexes',\n  mapper,\n  reducer,\n  ddocValidator\n);\n\n// normalize the \"sort\" value\nfunction massageSort(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n}\n\nfunction massageUseIndex(useIndex) {\n  var cleanedUseIndex = [];\n  if (typeof useIndex === 'string') {\n    cleanedUseIndex.push(useIndex);\n  } else {\n    cleanedUseIndex = useIndex;\n  }\n\n  return cleanedUseIndex.map(function (name) {\n    return name.replace('_design/', '');\n  });\n}\n\nfunction massageIndexDef(indexDef) {\n  indexDef.fields = indexDef.fields.map(function (field) {\n    if (typeof field === 'string') {\n      var obj = {};\n      obj[field] = 'asc';\n      return obj;\n    }\n    return field;\n  });\n  return indexDef;\n}\n\nfunction getKeyFromDoc(doc, index) {\n  var res = [];\n  for (var i = 0; i < index.def.fields.length; i++) {\n    var field = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"])(index.def.fields[i]);\n    res.push(doc[field]);\n  }\n  return res;\n}\n\n// have to do this manually because REASONS. I don't know why\n// CouchDB didn't implement inclusive_start\nfunction filterInclusiveStart(rows, targetValue, index) {\n  var indexFields = index.def.fields;\n  for (var i = 0, len = rows.length; i < len; i++) {\n    var row = rows[i];\n\n    // shave off any docs at the beginning that are <= the\n    // target value\n\n    var docKey = getKeyFromDoc(row.doc, index);\n    if (indexFields.length === 1) {\n      docKey = docKey[0]; // only one field, not multi-field\n    } else { // more than one field in index\n      // in the case where e.g. the user is searching {$gt: {a: 1}}\n      // but the index is [a, b], then we need to shorten the doc key\n      while (docKey.length > targetValue.length) {\n        docKey.pop();\n      }\n    }\n    //ABS as we just looking for values that don't match\n    if (Math.abs(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(docKey, targetValue)) > 0) {\n      // no need to filter any further; we're past the key\n      break;\n    }\n  }\n  return i > 0 ? rows.slice(i) : rows;\n}\n\nfunction reverseOptions(opts) {\n  var newOpts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"a\" /* clone */])(opts);\n  delete newOpts.startkey;\n  delete newOpts.endkey;\n  delete newOpts.inclusive_start;\n  delete newOpts.inclusive_end;\n\n  if ('endkey' in opts) {\n    newOpts.startkey = opts.endkey;\n  }\n  if ('startkey' in opts) {\n    newOpts.endkey = opts.startkey;\n  }\n  if ('inclusive_start' in opts) {\n    newOpts.inclusive_end = opts.inclusive_start;\n  }\n  if ('inclusive_end' in opts) {\n    newOpts.inclusive_start = opts.inclusive_end;\n  }\n  return newOpts;\n}\n\nfunction validateIndex(index) {\n  var ascFields = index.fields.filter(function (field) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getValue\"])(field) === 'asc';\n  });\n  if (ascFields.length !== 0 && ascFields.length !== index.fields.length) {\n    throw new Error('unsupported mixed sorting');\n  }\n}\n\nfunction validateSort(requestDef, index) {\n  if (index.defaultUsed && requestDef.sort) {\n    var noneIdSorts = requestDef.sort.filter(function (sortItem) {\n      return Object.keys(sortItem)[0] !== '_id';\n    }).map(function (sortItem) {\n      return Object.keys(sortItem)[0];\n    });\n\n    if (noneIdSorts.length > 0) {\n      throw new Error('Cannot sort on field(s) \"' + noneIdSorts.join(',') +\n      '\" when using the default index');\n    }\n  }\n\n  if (index.defaultUsed) {\n    return;\n  }\n}\n\nfunction validateFindRequest(requestDef) {\n  if (typeof requestDef.selector !== 'object') {\n    throw new Error('you must provide a selector when you find()');\n  }\n\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\n  for (var i = 0; i < selectors.length; i++) {\n    var selector = selectors[i];\n    var keys = Object.keys(selector);\n    if (keys.length === 0) {\n      throw new Error('invalid empty selector');\n    }\n    //var selection = selector[keys[0]];\n    /*if (Object.keys(selection).length !== 1) {\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\n        ' - it must have exactly one key/value');\n    }\n  }*/\n}\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nfunction getUserFields(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"])\n  };\n}\n\nfunction createIndex$1(db, requestDef) {\n  requestDef = massageCreateIndexRequest(requestDef);\n  var originalIndexDef = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"a\" /* clone */])(requestDef.index);\n  requestDef.index = massageIndexDef(requestDef.index);\n\n  validateIndex(requestDef.index);\n\n  // calculating md5 is expensive - memoize and only\n  // run if required\n  var md5;\n  function getMd5() {\n    return md5 || (md5 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_pouchdb_md5__[\"a\" /* stringMd5 */])(JSON.stringify(requestDef)));\n  }\n\n  var viewName = requestDef.name || ('idx-' + getMd5());\n\n  var ddocName = requestDef.ddoc || ('idx-' + getMd5());\n  var ddocId = '_design/' + ddocName;\n\n  var hasInvalidLanguage = false;\n  var viewExists = false;\n\n  function updateDdoc(doc) {\n    if (doc._rev && doc.language !== 'query') {\n      hasInvalidLanguage = true;\n    }\n    doc.language = 'query';\n    doc.views = doc.views || {};\n\n    viewExists = !!doc.views[viewName];\n\n    if (viewExists) {\n      return false;\n    }\n\n    doc.views[viewName] = {\n      map: {\n        fields: mergeObjects(requestDef.index.fields)\n      },\n      reduce: '_count',\n      options: {\n        def: originalIndexDef\n      }\n    };\n\n    return doc;\n  }\n\n  db.constructor.emit('debug', ['find', 'creating index', ddocId]);\n\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"c\" /* upsert */])(db, ddocId, updateDdoc).then(function () {\n    if (hasInvalidLanguage) {\n      throw new Error('invalid language for ddoc with id \"' +\n      ddocId +\n      '\" (should be \"query\")');\n    }\n  }).then(function () {\n    // kick off a build\n    // TODO: abstract-pouchdb-mapreduce should support auto-updating\n    // TODO: should also use update_after, but pouchdb/pouchdb#3415 blocks me\n    var signature = ddocName + '/' + viewName;\n    return abstractMapper.query.call(db, signature, {\n      limit: 0,\n      reduce: false\n    }).then(function () {\n      return {\n        id: ddocId,\n        name: viewName,\n        result: viewExists ? 'exists' : 'created'\n      };\n    });\n  });\n}\n\nfunction getIndexes$1(db) {\n  // just search through all the design docs and filter in-memory.\n  // hopefully there aren't that many ddocs.\n  return db.allDocs({\n    startkey: '_design/',\n    endkey: '_design/\\uffff',\n    include_docs: true\n  }).then(function (allDocsRes) {\n    var res = {\n      indexes: [{\n        ddoc: null,\n        name: '_all_docs',\n        type: 'special',\n        def: {\n          fields: [{_id: 'asc'}]\n        }\n      }]\n    };\n\n    res.indexes = flatten(res.indexes, allDocsRes.rows.filter(function (row) {\n      return row.doc.language === 'query';\n    }).map(function (row) {\n      var viewNames = row.doc.views !== undefined ? Object.keys(row.doc.views) : [];\n\n      return viewNames.map(function (viewName) {\n        var view = row.doc.views[viewName];\n        return {\n          ddoc: row.id,\n          name: viewName,\n          type: 'json',\n          def: massageIndexDef(view.options.def)\n        };\n      });\n    }));\n\n    // these are sorted by view name for some reason\n    res.indexes.sort(function (left, right) {\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"compare\"])(left.name, right.name);\n    });\n    res.total_rows = res.indexes.length;\n    return res;\n  });\n}\n\n// couchdb lowest collation value\nvar COLLATE_LO = null;\n\n// couchdb highest collation value (TODO: well not really, but close enough amirite)\nvar COLLATE_HI = {\"\\uffff\": {}};\n\n// couchdb second-lowest collation value\n\nfunction checkFieldInIndex(index, field) {\n  var indexFields = index.def.fields.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]);\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n    if (field === indexField) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// so when you do e.g. $eq/$eq, we can do it entirely in the database.\n// but when you do e.g. $gt/$eq, the first part can be done\n// in the database, but the second part has to be done in-memory,\n// because $gt has forced us to lose precision.\n// so that's what this determines\nfunction userOperatorLosesPrecision(selector, field) {\n  var matcher = selector[field];\n  var userOperator = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"])(matcher);\n\n  return userOperator !== '$eq';\n}\n\n// sort the user fields by their position in the index,\n// if they're in the index\nfunction sortFieldsByIndex(userFields, index) {\n  var indexFields = index.def.fields.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]);\n\n  return userFields.slice().sort(function (a, b) {\n    var aIdx = indexFields.indexOf(a);\n    var bIdx = indexFields.indexOf(b);\n    if (aIdx === -1) {\n      aIdx = Number.MAX_VALUE;\n    }\n    if (bIdx === -1) {\n      bIdx = Number.MAX_VALUE;\n    }\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"compare\"])(aIdx, bIdx);\n  });\n}\n\n// first pass to try to find fields that will need to be sorted in-memory\nfunction getBasicInMemoryFields(index, selector, userFields) {\n\n  userFields = sortFieldsByIndex(userFields, index);\n\n  // check if any of the user selectors lose precision\n  var needToFilterInMemory = false;\n  for (var i = 0, len = userFields.length; i < len; i++) {\n    var field = userFields[i];\n    if (needToFilterInMemory || !checkFieldInIndex(index, field)) {\n      return userFields.slice(i);\n    }\n    if (i < len - 1 && userOperatorLosesPrecision(selector, field)) {\n      needToFilterInMemory = true;\n    }\n  }\n  return [];\n}\n\nfunction getInMemoryFieldsFromNe(selector) {\n  var fields = [];\n  Object.keys(selector).forEach(function (field) {\n    var matcher = selector[field];\n    Object.keys(matcher).forEach(function (operator) {\n      if (operator === '$ne') {\n        fields.push(field);\n      }\n    });\n  });\n  return fields;\n}\n\nfunction getInMemoryFields(coreInMemoryFields, index, selector, userFields) {\n  var result = flatten(\n    // in-memory fields reported as necessary by the query planner\n    coreInMemoryFields,\n    // combine with another pass that checks for any we may have missed\n    getBasicInMemoryFields(index, selector, userFields),\n    // combine with another pass that checks for $ne's\n    getInMemoryFieldsFromNe(selector)\n  );\n\n  return sortFieldsByIndex(uniq(result), index);\n}\n\n// check that at least one field in the user's query is represented\n// in the index. order matters in the case of sorts\nfunction checkIndexFieldsMatch(indexFields, sortOrder, fields) {\n  if (sortOrder) {\n    // array has to be a strict subarray of index array. furthermore,\n    // the sortOrder fields need to all be represented in the index\n    var sortMatches = oneArrayIsStrictSubArrayOfOther(sortOrder, indexFields);\n    var selectorMatches = oneArrayIsSubArrayOfOther(fields, indexFields);\n\n    return sortMatches && selectorMatches;\n  }\n\n  // all of the user's specified fields still need to be\n  // on the left side of the index array, although the order\n  // doesn't matter\n  return oneSetIsSubArrayOfOther(fields, indexFields);\n}\n\nvar logicalMatchers = ['$eq', '$gt', '$gte', '$lt', '$lte'];\nfunction isNonLogicalMatcher(matcher) {\n  return logicalMatchers.indexOf(matcher) === -1;\n}\n\n// check all the index fields for usages of '$ne'\n// e.g. if the user queries {foo: {$ne: 'foo'}, bar: {$eq: 'bar'}},\n// then we can neither use an index on ['foo'] nor an index on\n// ['foo', 'bar'], but we can use an index on ['bar'] or ['bar', 'foo']\nfunction checkFieldsLogicallySound(indexFields, selector) {\n  var firstField = indexFields[0];\n  var matcher = selector[firstField];\n\n  if (typeof matcher === 'undefined') {\n    return true;\n  }\n\n  var hasLogicalOperator = Object.keys(matcher).some(function (matcherKey) {\n    return !(isNonLogicalMatcher(matcherKey));\n  });\n\n  if (!hasLogicalOperator) {\n    return false;\n  }\n\n  var isInvalidNe = Object.keys(matcher).length === 1 &&\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"])(matcher) === '$ne';\n\n  return !isInvalidNe;\n}\n\nfunction checkIndexMatches(index, sortOrder, fields, selector) {\n\n  var indexFields = index.def.fields.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]);\n\n  var fieldsMatch = checkIndexFieldsMatch(indexFields, sortOrder, fields);\n\n  if (!fieldsMatch) {\n    return false;\n  }\n\n  return checkFieldsLogicallySound(indexFields, selector);\n}\n\n//\n// the algorithm is very simple:\n// take all the fields the user supplies, and if those fields\n// are a strict subset of the fields in some index,\n// then use that index\n//\n//\nfunction findMatchingIndexes(selector, userFields, sortOrder, indexes) {\n\n  return indexes.reduce(function (res, index) {\n    var indexMatches = checkIndexMatches(index, sortOrder, userFields, selector);\n    if (indexMatches) {\n      res.push(index);\n    }\n    return res;\n  }, []);\n}\n\n// find the best index, i.e. the one that matches the most fields\n// in the user's query\nfunction findBestMatchingIndex(selector, userFields, sortOrder, indexes, useIndex) {\n\n  var matchingIndexes = findMatchingIndexes(selector, userFields, sortOrder, indexes);\n\n  if (matchingIndexes.length === 0) {\n    if (useIndex) {\n      throw {\n        error: \"no_usable_index\",\n        message: \"There is no index available for this selector.\"\n      };\n    }\n    //return `all_docs` as a default index;\n    //I'm assuming that _all_docs is always first\n    var defaultIndex = indexes[0];\n    defaultIndex.defaultUsed = true;\n    return defaultIndex;\n  }\n  if (matchingIndexes.length === 1 && !useIndex) {\n    return matchingIndexes[0];\n  }\n\n  var userFieldsMap = arrayToObject(userFields);\n\n  function scoreIndex(index) {\n    var indexFields = index.def.fields.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]);\n    var score = 0;\n    for (var i = 0, len = indexFields.length; i < len; i++) {\n      var indexField = indexFields[i];\n      if (userFieldsMap[indexField]) {\n        score++;\n      }\n    }\n    return score;\n  }\n\n  if (useIndex) {\n    var useIndexDdoc = '_design/' + useIndex[0];\n    var useIndexName = useIndex.length === 2 ? useIndex[1] : false;\n    var index = matchingIndexes.find(function (index) {\n      if (useIndexName && index.ddoc === useIndexDdoc && useIndexName === index.name) {\n        return true;\n      }\n\n      if (index.ddoc === useIndexDdoc) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!index) {\n      throw {\n        error: \"unknown_error\",\n        message: \"Could not find that index or could not use that index for the query\"\n      };\n    }\n    return index;\n  }\n\n  return max(matchingIndexes, scoreIndex);\n}\n\nfunction getSingleFieldQueryOptsFor(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {key: userValue};\n    case '$lte':\n      return {endkey: userValue};\n    case '$gte':\n      return {startkey: userValue};\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getSingleFieldCoreQueryPlan(selector, index) {\n  var field = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"])(index.def.fields[0]);\n  //ignoring this because the test to exercise the branch is skipped at the moment\n  /* istanbul ignore next */\n  var matcher = selector[field] || {};\n  var inMemoryFields = [];\n\n  var userOperators = Object.keys(matcher);\n\n  var combinedOpts;\n\n  userOperators.forEach(function (userOperator) {\n\n    if (isNonLogicalMatcher(userOperator)) {\n      inMemoryFields.push(field);\n      return;\n    }\n\n    var userValue = matcher[userOperator];\n\n    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\n\n    if (combinedOpts) {\n      combinedOpts = mergeObjects([combinedOpts, newQueryOpts]);\n    } else {\n      combinedOpts = newQueryOpts;\n    }\n  });\n\n  return {\n    queryOpts: combinedOpts,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getMultiFieldCoreQueryPlan(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {\n        startkey: userValue,\n        endkey: userValue\n      };\n    case '$lte':\n      return {\n        endkey: userValue\n      };\n    case '$gte':\n      return {\n        startkey: userValue\n      };\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getMultiFieldQueryOpts(selector, index) {\n\n  var indexFields = index.def.fields.map(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getKey\"]);\n\n  var inMemoryFields = [];\n  var startkey = [];\n  var endkey = [];\n  var inclusiveStart;\n  var inclusiveEnd;\n\n\n  function finish(i) {\n\n    if (inclusiveStart !== false) {\n      startkey.push(COLLATE_LO);\n    }\n    if (inclusiveEnd !== false) {\n      endkey.push(COLLATE_HI);\n    }\n    // keep track of the fields where we lost specificity,\n    // and therefore need to filter in-memory\n    inMemoryFields = indexFields.slice(i);\n  }\n\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n\n    var matcher = selector[indexField];\n\n    if (!matcher || !Object.keys(matcher).length) { // fewer fields in user query than in index\n      finish(i);\n      break;\n    } else if (i > 0) {\n      if (Object.keys(matcher).some(isNonLogicalMatcher)) { // non-logical are ignored\n        finish(i);\n        break;\n      }\n      var usingGtlt = (\n        '$gt' in matcher || '$gte' in matcher ||\n        '$lt' in matcher || '$lte' in matcher);\n      var previousKeys = Object.keys(selector[indexFields[i - 1]]);\n      var previousWasEq = arrayEquals(previousKeys, ['$eq']);\n      var previousWasSame = arrayEquals(previousKeys, Object.keys(matcher));\n      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\n      if (gtltLostSpecificity) {\n        finish(i);\n        break;\n      }\n    }\n\n    var userOperators = Object.keys(matcher);\n\n    var combinedOpts = null;\n\n    for (var j = 0; j < userOperators.length; j++) {\n      var userOperator = userOperators[j];\n      var userValue = matcher[userOperator];\n\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\n\n      if (combinedOpts) {\n        combinedOpts = mergeObjects([combinedOpts, newOpts]);\n      } else {\n        combinedOpts = newOpts;\n      }\n    }\n\n    startkey.push('startkey' in combinedOpts ? combinedOpts.startkey : COLLATE_LO);\n    endkey.push('endkey' in combinedOpts ? combinedOpts.endkey : COLLATE_HI);\n    if ('inclusive_start' in combinedOpts) {\n      inclusiveStart = combinedOpts.inclusive_start;\n    }\n    if ('inclusive_end' in combinedOpts) {\n      inclusiveEnd = combinedOpts.inclusive_end;\n    }\n  }\n\n  var res = {\n    startkey: startkey,\n    endkey: endkey\n  };\n\n  if (typeof inclusiveStart !== 'undefined') {\n    res.inclusive_start = inclusiveStart;\n  }\n  if (typeof inclusiveEnd !== 'undefined') {\n    res.inclusive_end = inclusiveEnd;\n  }\n\n  return {\n    queryOpts: res,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getDefaultQueryPlan(selector) {\n  //using default index, so all fields need to be done in memory\n  return {\n    queryOpts: {startkey: null},\n    inMemoryFields: [Object.keys(selector)]\n  };\n}\n\nfunction getCoreQueryPlan(selector, index) {\n  if (index.defaultUsed) {\n    return getDefaultQueryPlan(selector, index);\n  }\n\n  if (index.def.fields.length === 1) {\n    // one field in index, so the value was indexed as a singleton\n    return getSingleFieldCoreQueryPlan(selector, index);\n  }\n  // else index has multiple fields, so the value was indexed as an array\n  return getMultiFieldQueryOpts(selector, index);\n}\n\nfunction planQuery(request, indexes) {\n\n  var selector = request.selector;\n  var sort = request.sort;\n\n  var userFieldsRes = getUserFields(selector, sort);\n\n  var userFields = userFieldsRes.fields;\n  var sortOrder = userFieldsRes.sortOrder;\n  var index = findBestMatchingIndex(selector, userFields, sortOrder, indexes, request.use_index);\n\n  var coreQueryPlan = getCoreQueryPlan(selector, index);\n  var queryOpts = coreQueryPlan.queryOpts;\n  var coreInMemoryFields = coreQueryPlan.inMemoryFields;\n\n  var inMemoryFields = getInMemoryFields(coreInMemoryFields, index, selector, userFields);\n\n  var res = {\n    queryOpts: queryOpts,\n    index: index,\n    inMemoryFields: inMemoryFields\n  };\n  return res;\n}\n\nfunction indexToSignature(index) {\n  // remove '_design/'\n  return index.ddoc.substring(8) + '/' + index.name;\n}\n\nfunction doAllDocs(db, originalOpts) {\n  var opts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"a\" /* clone */])(originalOpts);\n\n  // CouchDB responds in weird ways when you provide a non-string to _id;\n  // we mimic the behavior for consistency. See issue66 tests for details.\n\n  if (opts.descending) {\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.endkey = '';\n    }\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.limit = 0;\n    }\n  } else {\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.startkey = '';\n    }\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.limit = 0;\n    }\n  }\n  if ('key' in opts && typeof opts.key !== 'string') {\n    opts.limit = 0;\n  }\n\n  return db.allDocs(opts)\n  .then(function (res) {\n    // filter out any design docs that _all_docs might return\n    res.rows = res.rows.filter(function (row) {\n      return !/^_design\\//.test(row.id);\n    });\n    return res;\n  });\n}\n\nfunction find$1(db, requestDef, explain) {\n  if (requestDef.selector) {\n    requestDef.selector = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"massageSelector\"])(requestDef.selector);\n  }\n\n  if (requestDef.sort) {\n    requestDef.sort = massageSort(requestDef.sort);\n  }\n\n  if (requestDef.use_index) {\n    requestDef.use_index = massageUseIndex(requestDef.use_index);\n  }\n\n  validateFindRequest(requestDef);\n\n  return getIndexes$1(db).then(function (getIndexesRes) {\n\n    db.constructor.emit('debug', ['find', 'planning query', requestDef]);\n    var queryPlan = planQuery(requestDef, getIndexesRes.indexes);\n    db.constructor.emit('debug', ['find', 'query plan', queryPlan]);\n\n    var indexToUse = queryPlan.index;\n\n    validateSort(requestDef, indexToUse);\n\n    var opts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"b\" /* assign */])({\n      include_docs: true,\n      reduce: false\n    }, queryPlan.queryOpts);\n\n    if ('startkey' in opts && 'endkey' in opts &&\n        __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(opts.startkey, opts.endkey) > 0) {\n      // can't possibly return any results, startkey > endkey\n      return {docs: []};\n    }\n\n    var isDescending = requestDef.sort &&\n      typeof requestDef.sort[0] !== 'string' &&\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"getValue\"])(requestDef.sort[0]) === 'desc';\n\n    if (isDescending) {\n      // either all descending or all ascending\n      opts.descending = true;\n      opts = reverseOptions(opts);\n    }\n\n    if (!queryPlan.inMemoryFields.length) {\n      // no in-memory filtering necessary, so we can let the\n      // database do the limit/skip for us\n      if ('limit' in requestDef) {\n        opts.limit = requestDef.limit;\n      }\n      if ('skip' in requestDef) {\n        opts.skip = requestDef.skip;\n      }\n    }\n\n    if (explain) {\n      return __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */].resolve(queryPlan, opts);\n    }\n\n    return __WEBPACK_IMPORTED_MODULE_1_pouchdb_promise__[\"a\" /* default */].resolve().then(function () {\n      if (indexToUse.name === '_all_docs') {\n        return doAllDocs(db, opts);\n      } else {\n        var signature = indexToSignature(indexToUse);\n        return abstractMapper.query.call(db, signature, opts);\n      }\n    }).then(function (res) {\n      if (opts.inclusive_start === false) {\n        // may have to manually filter the first one,\n        // since couchdb has no true inclusive_start option\n        res.rows = filterInclusiveStart(res.rows, opts.startkey, indexToUse);\n      }\n\n      if (queryPlan.inMemoryFields.length) {\n        // need to filter some stuff in-memory\n        res.rows = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_selector_core__[\"filterInMemoryFields\"])(res.rows, requestDef, queryPlan.inMemoryFields);\n      }\n\n      var resp = {\n        docs: res.rows.map(function (row) {\n          var doc = row.doc;\n          if (requestDef.fields) {\n            return pick(doc, requestDef.fields);\n          }\n          return doc;\n        })\n      };\n\n      if (indexToUse.defaultUsed) {\n        resp.warning = 'no matching index found, create an index to optimize query time';\n      }\n\n      return resp;\n    });\n  });\n}\n\nfunction explain$1(db, requestDef) {\n  return find$1(db, requestDef, true)\n  .then(function (queryPlan) {\n    return {\n      dbname: db.name,\n      index: queryPlan.index,\n      selector: requestDef.selector,\n      range: {\n        start_key: queryPlan.queryOpts.startkey,\n        end_key: queryPlan.queryOpts.endkey,\n      },\n      opts: {\n        use_index: requestDef.use_index || [],\n        bookmark: \"nil\", //hardcoded to match CouchDB since its not supported,\n        limit: requestDef.limit,\n        skip: requestDef.skip,\n        sort: requestDef.sort || {},\n        fields: requestDef.fields,\n        conflicts: false, //hardcoded to match CouchDB since its not supported,\n        r: [49], // hardcoded to match CouchDB since its not support\n      },\n      limit: requestDef.limit,\n      skip: requestDef.skip || 0,\n      fields: requestDef.fields,\n    };\n  });\n}\n\nfunction deleteIndex$1(db, index) {\n\n  if (!index.ddoc) {\n    throw new Error('you must supply an index.ddoc when deleting');\n  }\n\n  if (!index.name) {\n    throw new Error('you must supply an index.name when deleting');\n  }\n\n  var docId = index.ddoc;\n  var viewName = index.name;\n\n  function deltaFun(doc) {\n    if (Object.keys(doc.views).length === 1 && doc.views[viewName]) {\n      // only one view in this ddoc, delete the whole ddoc\n      return {_id: docId, _deleted: true};\n    }\n    // more than one view here, just remove the view\n    delete doc.views[viewName];\n    return doc;\n  }\n\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"c\" /* upsert */])(db, docId, deltaFun).then(function () {\n    return abstractMapper.viewCleanup.apply(db);\n  }).then(function () {\n    return {ok: true};\n  });\n}\n\nvar createIndexAsCallback = callbackify(createIndex$1);\nvar findAsCallback = callbackify(find$1);\nvar explainAsCallback = callbackify(explain$1);\nvar getIndexesAsCallback = callbackify(getIndexes$1);\nvar deleteIndexAsCallback = callbackify(deleteIndex$1);\n\nvar plugin = {};\nplugin.createIndex = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"d\" /* toPromise */])(function (requestDef, callback) {\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide an index to create'));\n  }\n\n  var createIndex$$1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"e\" /* isRemote */])(this) ?\n    createIndex : createIndexAsCallback;\n  createIndex$$1(this, requestDef, callback);\n});\n\nplugin.find = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"d\" /* toPromise */])(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to find()'));\n  }\n\n  var find$$1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"e\" /* isRemote */])(this) ? find : findAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.explain = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"d\" /* toPromise */])(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to explain()'));\n  }\n\n  var find$$1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"e\" /* isRemote */])(this) ? explain : explainAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.getIndexes = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"d\" /* toPromise */])(function (callback) {\n\n  var getIndexes$$1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"e\" /* isRemote */])(this) ? getIndexes : getIndexesAsCallback;\n  getIndexes$$1(this, callback);\n});\n\nplugin.deleteIndex = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"d\" /* toPromise */])(function (indexDef, callback) {\n\n  if (typeof indexDef !== 'object') {\n    return callback(new Error('you must provide an index to delete'));\n  }\n\n  var deleteIndex$$1 = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_pouchdb_utils__[\"e\" /* isRemote */])(this) ?\n    deleteIndex : deleteIndexAsCallback;\n  deleteIndex$$1(this, indexDef, callback);\n});\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (plugin);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(14)))\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar EventEmitter = __webpack_require__(6);\nvar helpers = __webpack_require__(32);\nvar collate = __webpack_require__(0).collate;\nvar selectorCore = __webpack_require__(3);\nvar utils = __webpack_require__(12);\nvar getValue = selectorCore.getValue;\nvar massageSelector = selectorCore.massageSelector;\nvar massageSort = utils.massageSort;\n\nfunction liveFind(requestDef) {\n\n  if(typeof this.find !== 'function') {\n    throw new Error('ERROR: PouchDB Find is a requirement for LiveFind and must be loaded first.');\n  }\n\n  var db = this;\n  var cancelled = false;\n  var lookup = {};\n  var emitter = new EventEmitter();\n  var docList = [];\n  var aggregate = requestDef.aggregate || false;\n\n  // Normalize the request options\n  var fields = requestDef.fields;\n  var stripId = false, stripRev = false;\n  if(fields) {\n    // _id is a necessary field to process the docs\n    if(fields.indexOf('_id') === -1) {\n      fields.unshift('_id');\n      stripId = true;\n    }\n    // We need the _rev to sort out changes but can strip it later\n    if(fields.indexOf('_rev') === -1) {\n      fields.push('_rev');\n      stripRev = true;\n    }\n  }\n  var selector;\n  if(requestDef.selector) {\n    selector = massageSelector(requestDef.selector);\n  }\n  var sort, sortFn;\n  if(requestDef.sort) {\n    sort = massageSort(requestDef.sort);\n    sortFn = helpers.createFieldSorter(sort);\n  }\n  var skip = parseInt(requestDef.skip, 10) || 0;\n  var limit = parseInt(requestDef.limit, 10) || 0;\n  var findRequest = {\n    selector: selector,\n    // sort: sort,\n    fields: fields\n  };\n\n  var ready = db.find(findRequest)\n    .then(function(results) {\n      results.docs.forEach(function(doc) {\n        addResult(doc);\n      });\n      emitter.emit('ready');\n    })\n    .catch(function(err) {\n      emitter.emit('error', err);\n      cancel();\n      throw err;\n    });\n\n  // We will use just one change listener for all live queries.\n  // We need to keep track of how many queries are running.\n  // When the last live query finishes we will cancel the listener.\n  if(!db._changeListener) {\n    listen();\n  }\n  if(!db._activeQueries) {\n    db._activeQueries = 1;\n  } else {\n    db._activeQueries++;\n  }\n\n  db._changeListener\n    .on('change', changeHandler)\n    .on('error', errorHandler);\n\n  emitter.cancel = cancel;\n  // Bind the `find` query promise to our emitter object\n  // so we know when the initial query is done and can catch errors\n  emitter.then = ready.then.bind(ready);\n  emitter.catch = ready.catch.bind(ready);\n\n  emitter.sort = function(list) {\n    if(!sort) {\n      return list;\n    }\n    return sortList(list);\n  };\n\n  emitter.paginate = paginate;\n\n  function changeHandler(change) {\n    ready.then(function() {\n      if(change.doc) {\n        processChange(change.doc);\n      }\n    });\n  }\n\n  function errorHandler(err) {\n    emitter.emit('error', err);\n  }\n\n  function cancel() {\n    if(!cancelled) {\n      db._activeQueries --;\n      if(!db._activeQueries) {\n        db._changeListener.cancel();\n        delete db._changeListener;\n      } else {\n        db._changeListener.removeListener('change', changeHandler);\n        db._changeListener.removeListener('error', errorHandler);\n      }\n      emitter.emit('cancelled');\n      emitter.removeAllListeners();\n      cancelled = true;\n    }\n  }\n\n  function listen() {\n    db._changeListener = db.changes({live: true, retry: true, include_docs: true, since: 'now'});\n  }\n\n  function filterDoc(doc) {\n    var result = helpers.memoryFilter([doc], {selector: selector});\n    if(result.length) {\n      return result[0];\n    }\n    return null;\n  }\n\n  function pickFields(doc) {\n    if (fields) {\n      var output = utils.pick(doc, fields);\n      if(stripId) {\n        delete output._id;\n      }\n      if(stripRev) {\n        delete output._rev;\n      }\n      return output;\n    }\n    return doc;\n  }\n\n  // This processes the initial results of the query\n  function addResult(doc) {\n    lookup[doc._id] = doc._rev;\n    var id = doc._id;\n    var rev = doc._rev;\n    if(stripId) {\n      delete doc._id;\n    }\n    if(stripRev) {\n      delete doc._rev;\n    }\n    return addAction(doc, id, rev);\n  }\n\n  function processChange(doc) {\n    // Don't fire an update if this rev has already been processed\n    if(lookup[doc._id] === doc._rev) {\n      // console.warn('A change was fired twice. This shouldn\\'t happen.');\n      return;\n    }\n    var id = doc._id;\n    var rev = doc._rev;\n    if(doc._deleted && lookup[id]) {\n      lookup[id] = null;\n      return removeAction({_id: id, _rev: rev, deleted: true}, id, rev);\n    }\n    var outputDoc = filterDoc(doc);\n    if(!outputDoc && lookup[id]) {\n      lookup[id] = null;\n      return removeAction({_id: id, _rev: rev}, id, rev);\n    }\n    if(outputDoc && !lookup[id]) {\n      lookup[id] = rev;\n      return addAction(pickFields(outputDoc), id, rev);\n    }\n    if(outputDoc && lookup[id]) {\n      lookup[id] = rev;\n      return updateAction(pickFields(outputDoc), id, rev);\n    }\n  }\n\n  function removeAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.filter(function(item) {\n        return item._id !== doc._id;\n      });\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'REMOVE', id: id, rev: rev, doc: doc }, list);\n  }\n\n  function addAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.concat(doc);\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'ADD', id: id, rev: rev, doc: doc }, list);\n  }\n\n  function updateAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.map(function(item) {\n        return item._id === doc._id ? doc : item;\n      });\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'UPDATE', id: id, rev: rev, doc: doc }, list);\n  }\n\n  /* function sortList(list) {\n    list = list.sort(sortFn);\n    if (typeof sort[0] !== 'string' &&\n      getValue(sort[0]) === 'desc') {\n      list = list.reverse();\n    }\n    return list;\n  } */\n\n  function sortList(list) {\n    return list.sort(sortFn);\n  }\n\n  // Applies sort, skip, and limit to a list\n  function formatList(list) {\n    if(sort) {\n      list = sortList(list);\n    }\n    if(skip || limit) {\n      if(limit) {\n        list = list.slice(skip, skip + limit);\n      } else {\n        list = list.slice(skip);\n      }\n    }\n    return list;\n  }\n\n  function paginate(options) {\n    if(!aggregate || !options || typeof options !== 'object') {\n      return;\n    }\n    if(options.skip != null) {\n      skip = parseInt(options.skip, 10) || 0;\n    }\n    if(options.limit != null) {\n      limit = parseInt(options.limit, 10) || 0;\n    }\n    if(options.sort && options.sort instanceof Array) {\n      sort = massageSort(options.sort);\n      sortFn = helpers.createFieldSorter(sort);\n    }\n    return formatList(docList);\n  }\n\n  return emitter;\n\n}\n\nexports.liveFind = liveFind;\n\nif (typeof window !== 'undefined' && window.PouchDB) {\n  window.PouchDB.plugin(exports);\n}\n\n/***/ }),\n/* 22 */,\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n(function () {\n  var vue = null;\n  var pouch = null;\n  var defaultDB = null;\n  var defaultUsername = null;\n  var defaultPassword = null;\n  var databases = {};\n  \n  var vuePouch = {\n    destroyed: function() {\n      Object.values(this._liveFinds).map(function(lf) { lf.cancel(); });\n    },\n    created: function() {\n      if (!vue) {\n        console.warn('[vue-pouch] not installed!')\n        return\n      }\n      var defineReactive = vue.util.defineReactive;\n      var vm = this;\n      vm._liveFinds = {};\n      \n      function fetchSession(database) {\n        if (['http','https'].indexOf(database.adapter) == -1) return;\n        database.getSession().then(function(res) {\n          return database.getUser(res.userCtx.name).then(function(res) {\n            vm.$pouch.session = res;\n          })\n        }).catch(function(error) {\n          vm.$pouch.authError = error\n        });\n      }\n      function login(database) {\n        if (['http','https'].indexOf(database.adapter) == -1) return;\n        database.login(defaultUsername, defaultPassword).then(function(res) {\n          vm.$pouch.session = res;\n          return database.getUser(defaultUsername).then(function(res) {\n            vm.$pouch.session = res;\n          })\n        }).catch(function(error) {\n          vm.$pouch.authError = error\n        })\n      }\n      function logout(database) {\n        database.logout()\n      }\n      \n      var $pouch = {\n        useAuth: function(username, password) {\n          defaultUsername = username;\n          defaultPassword = password;\n          for (var dbString in databases) {\n            if (!databases.hasOwnProperty(dbString)) continue;\n            login(databases[dbString]);\n          }\n          vm.$pouch.gotAuth = true;\n        },\n        createUser: function(username, password) {\n          defaultDB.signup(username, password).then(function(res) {\n            vm.$pouch.useAuth(username, password);\n          }).catch(function(error) {\n            vm.$pouch.authError = error;\n          })\n        },\n        resetAuth: function() {\n          defaultUsername = null;\n          defaultPassword = null;\n          vm.$pouch.gotAuth = false;\n          vm.$pouch.session = {}\n          if (defaultDB) defaultDB.logout()\n        },\n        sync: function(localDB, remoteDB, _options) {\n          if (!databases[localDB])  databases[localDB] = new pouch(localDB);\n          if (!databases[remoteDB]) databases[remoteDB] = new pouch(remoteDB);\n          if (!defaultDB) defaultDB = databases[remoteDB];\n          var options = Object.assign({}, _options, {live: true, retry: true})\n          var numPaused = 0;\n          vm.$pouch.loading[localDB] = true\n          // defineReactive(vm, '$pouch.ready', vm.$pouch.ready)\n          return pouch.sync(databases[localDB], databases[remoteDB], options)\n          .on('paused', function (err) {\n            if (err) {\n              vm.$pouch.errors[localDB] = err\n              vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)  \n              return;\n            }\n            numPaused += 1;\n            if (numPaused >= 2) {\n              vm.$pouch.loading[localDB] = false\n              vm.$pouch.loading = Object.assign({}, vm.$pouch.loading)\n            }\n          })\n          .on('active', function () {\n            // console.log('active callback')\n          })\n          .on('denied', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('denied callback')\n          })\n          .on('complete', function (info) {\n            // console.log('complete callback')\n          })\n          .on('error', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n          })\n          \n          fetchSession(databases[remoteDB]);\n        },\n        push: function(localDB, remoteDB, options) {\n          if (!databases[localDB])  databases[localDB] = new pouch(localDB);\n          if (!databases[remoteDB]) databases[remoteDB] = new pouch(remoteDB);\n          if (!defaultDB) defaultDB = databases[remoteDB];\n          fetchSession(databases[remoteDB]);\n          return databases[localDB].replicate.to(databases[remoteDB], options)\n          .on('paused', function (err) {\n            // console.log('paused callback')\n          })\n          .on('active', function () {\n            // console.log('active callback')\n          })\n          .on('denied', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('denied callback')\n          })\n          .on('complete', function (info) {\n            // console.log('complete callback')\n          })\n          .on('error', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('error callback')\n          })\n        },\n        put: function(db, object, options) {\n          return databases[db].put(object, options);\n        },\n        post: function(db, object, options) {\n          return databases[db].post(object, options);\n        },\n        remove: function(db, object, options) {\n          return databases[db].remove(object, options);\n        },\n        get: function(db, object, options) {\n          return databases[db].get(object, options);\n        },\n        session: {},\n        errors: {},\n        loading: {},\n        authError: null,\n        gotAuth: false\n      }\n      defineReactive(vm, '$pouch', $pouch);\n      vm.$databases = databases; // Add non-reactive property\n      \n      var pouchOptions = this.$options.pouch;\n      if (!pouchOptions) return;\n      if (typeof pouchOptions == 'function') pouchOptions = pouchOptions();\n      Object.keys(pouchOptions).map(function(key) {\n        var pouchFn = pouchOptions[key];\n        if (typeof pouchFn !== 'function') {\n          pouchFn = function() {\n            return pouchOptions[key];\n          }    \n        }\n        if (typeof vm.$data[key] == 'undefined') vm.$data[key] = null;\n        defineReactive(vm, key, null);\n        vm.$watch(pouchFn, function(config) {\n          if (!config) {\n            if (!vm[key]) vm[key] = []\n            return;\n          }\n          var selector, sort, skip, limit, first;\n          if (config.selector) {\n            selector = config.selector;\n            sort = config.sort;\n            skip = config.skip;\n            limit = config.limit;\n            first = config.first;\n          }\n          else {\n            selector = config\n          }\n          var databaseParam = config.database || key;\n          var db = null;\n          if (typeof databaseParam == 'object') {\n            db = databaseParam;\n          }\n          else if (typeof databaseParam == 'string') {\n            if (!databases[databaseParam]) {\n              databases[databaseParam] = new pouch(databaseParam);\n              if (vm.$pouch.gotAuth) login(databases[databaseParam]);\n            }\n            db = databases[databaseParam];\n          }\n          if (!db) return;\n          if (vm._liveFinds[key]) vm._liveFinds[key].cancel()\n          var aggregateCache = []\n          vm._liveFinds[key] = db.liveFind({\n            selector: selector, \n            sort: sort,\n            skip: skip,\n            limit: limit,\n            aggregate: true\n          }).on('update', function(update, aggregate) {\n            if (first && aggregate) aggregate = aggregate[0]\n            vm[key] = aggregateCache = aggregate;\n          }).on('ready', function() {\n            vm[key] = aggregateCache;\n          })\n        }, {\n          immediate: true\n        })\n      })\n    }\n  }\n  \n  function installSelectorReplicationPlugin() {\n    // This plugin enables selector-based replication\n    pouch.plugin(function(pouch) {\n      var oldReplicate = pouch.replicate\n      pouch.replicate = function(source, target, repOptions) {\n        var sourceAjax = source._ajax\n        source._ajax = function(ajaxOps, callback) {\n          if (ajaxOps.url.includes('_selector')) {\n            ajaxOps.url = ajaxOps.url.replace('filter=_selector%2F_selector', 'filter=_selector')\n            ajaxOps.method = 'POST'\n            ajaxOps.body = {\n              selector: repOptions.selector\n            }\n          }\n          return sourceAjax(ajaxOps, callback)\n        }\n        return oldReplicate(source, target, repOptions)\n      }\n    })\n  }\n  \n  var api = {\n    mixin: vuePouch,\n    install: function (Vue, options) {\n      vue = Vue;\n      pouch = (options && options.pouch) || PouchDB;\n      installSelectorReplicationPlugin()\n      defaultDB = (options && options.defaultDB);\n      Vue.options = Vue.util.mergeOptions(Vue.options, vuePouch);\n    }\n  }\n\n  if(true) {\n    module.exports = api\n  } else if(typeof define === 'function' && define.amd) {\n    define(function () { return api })\n  } else if (typeof window !== 'undefined') {\n    window.VuePouch = api\n  }\n})()\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.4.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  \"production\" !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  \"production\" !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  \"production\" !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (false) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(1)))\n\n/***/ }),\n/* 25 */,\n/* 26 */,\n/* 27 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_pouchdb_binary_utils__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_pouchdb_md5__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__ = __webpack_require__(33);\n\n\n\n\n\n\n\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue() {\n  this.promise = new __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */](function (fulfill) {fulfill(); });\n}\nTaskQueue.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5_pouchdb_md5__[\"a\" /* stringMd5 */])(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"c\" /* upsert */])(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue();\nvar CHANGES_BATCH_SIZE = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"f\" /* guardedConsole */])('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"f\" /* guardedConsole */])('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_pouchdb_binary_utils__[\"c\" /* base64StringToBlobOrBuffer */])(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"a\" /* QueryParseError */]('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"a\" /* QueryParseError */]('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(options[startkeyName], options[endkeyName]) > 0) {\n      throw new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"a\" /* QueryParseError */]('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"a\" /* QueryParseError */]('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"a\" /* QueryParseError */]('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */](function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */](function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"b\" /* Set */]();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"b\" /* mapToKeysArray */])(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"c\" /* uniq */])(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"b\" /* mapToKeysArray */])(docIdsToChangesAndEmits);\n        return __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"g\" /* flatten */])(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"d\" /* sequentialize */])(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"normalizeKey\"])(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"normalizeKey\"])(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"a\" /* Map */]();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"a\" /* Map */]();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"collate\"])(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"e\" /* BuiltInError */]) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"d\" /* sequentialize */])(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"parseIndexableString\"])(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"c\" /* uniq */])(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"a\" /* Map */]();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([key]),\n          endkey   : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].all(fetchPromises).then(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"g\" /* flatten */]).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([startkey, {}]) :\n          __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([opts.key]);\n        var keyEnd = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_pouchdb_collate__[\"toIndexableString\"])([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"a\" /* Map */]();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new __WEBPACK_IMPORTED_MODULE_1_pouchdb_collections__[\"b\" /* Set */]();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"b\" /* mapToKeysArray */])(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"d\" /* sequentialize */])(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"e\" /* isRemote */])(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"f\" /* fin */])(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new __WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"g\" /* NotFoundError */]('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"h\" /* nextTick */])(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = __WEBPACK_IMPORTED_MODULE_0_pouchdb_promise__[\"a\" /* default */].resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"h\" /* promisedCallback */])(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6_pouchdb_mapreduce_utils__[\"i\" /* callbackify */])(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"e\" /* isRemote */])(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (createAbstractMapReduce);\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = __webpack_require__(29);\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = __webpack_require__.i({\"NODE_ENV\":\"production\"}).DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = __webpack_require__(30);\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export UNAUTHORIZED */\n/* unused harmony export MISSING_BULK_DOCS */\n/* unused harmony export MISSING_DOC */\n/* unused harmony export REV_CONFLICT */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return INVALID_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return MISSING_ID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return RESERVED_ID; });\n/* unused harmony export NOT_OPEN */\n/* unused harmony export UNKNOWN_ERROR */\n/* unused harmony export BAD_ARG */\n/* unused harmony export INVALID_REQUEST */\n/* unused harmony export QUERY_PARSE_ERROR */\n/* unused harmony export DOC_VALIDATION */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return BAD_REQUEST; });\n/* unused harmony export NOT_AN_OBJECT */\n/* unused harmony export DB_MISSING */\n/* unused harmony export WSQ_ERROR */\n/* unused harmony export LDB_ERROR */\n/* unused harmony export FORBIDDEN */\n/* unused harmony export INVALID_REV */\n/* unused harmony export FILE_EXISTS */\n/* unused harmony export MISSING_STUB */\n/* unused harmony export IDB_ERROR */\n/* unused harmony export INVALID_URL */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return createError; });\n/* unused harmony export generateErrorFromResponse */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inherits__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_inherits__);\n\n\n__WEBPACK_IMPORTED_MODULE_0_inherits___default()(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\n\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar collate = __webpack_require__(0).collate;\nvar selectorCore = __webpack_require__(3);\nvar filterInMemoryFields = selectorCore.filterInMemoryFields;\nvar utils = __webpack_require__(12);\nvar compare = selectorCore.compare;\nvar getUserFields = utils.getUserFields;\nvar getKey = selectorCore.getKey;\nvar getValue = selectorCore.getValue;\nvar parseField = selectorCore.parseField;\n\nexports.memoryFilter = function(docs, requestDef) {\n  var userFieldsRes = getUserFields(requestDef.selector, requestDef.sort);\n  var userFields = userFieldsRes.fields;\n  var rows = docs.map(function(doc) { return {doc: doc}; });\n  return filterInMemoryFields(rows, requestDef, userFields)\n    .map(function(row) {\n      return row.doc;\n    });\n};\n\n// create a comparator based on the sort object\nexports.createFieldSorter = function(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  var directions = sort.map(function(sorting) {\n    if (typeof sorting !== 'string' &&\n      getValue(sorting) === 'desc') {\n      return -1;\n    }\n    return 1;\n  });\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow);\n    var bFieldValues = getFieldValuesAsArray(bRow);\n    for(var i=0, len=directions.length; i<len; i++) {\n      var collation = collate(aFieldValues[i], bFieldValues[i]);\n      if (collation !== 0) {\n        return collation * directions[i];\n      }\n    }\n    // this is what mango seems to do\n    return compare(aRow._id, bRow._id) * directions[0];\n  };\n};\n\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\n/***/ }),\n/* 33 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return uniq; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return sequentialize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return fin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return callbackify; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return promisedCallback; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return mapToKeysArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return QueryParseError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return NotFoundError; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return BuiltInError; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_pouchdb_collections__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_argsarray__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_argsarray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_argsarray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_inherits__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_inherits__);\n\n\n\n\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_3_inherits___default()(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_3_inherits___default()(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\n__WEBPACK_IMPORTED_MODULE_3_inherits___default()(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"h\" /* nextTick */])(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_pouchdb_utils__[\"h\" /* nextTick */])(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return __WEBPACK_IMPORTED_MODULE_1_argsarray___default()(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new __WEBPACK_IMPORTED_MODULE_0_pouchdb_collections__[\"b\" /* Set */](arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\n\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(18);\nvar bytesToUuid = __webpack_require__(17);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(18);\nvar bytesToUuid = __webpack_require__(17);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 37 */,\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.e085d3dae8fa746f711e.js","function pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\nexport { collate, normalizeKey, toIndexableString, parseIndexableString };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-collate/lib/index.es.js\n// module id = 0\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 2\n// module chunks = 0","import { clone } from 'pouchdb-utils';\nimport { collate } from 'pouchdb-collate';\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction setFieldInDoc(doc, parsedField, value) {\n  for (var i = 0, len = parsedField.length; i < len-1; i++) {\n    var elem = parsedField[i];\n    doc = doc[elem] = {};\n  }\n  doc[parsedField[len-1]] = value;\n}\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nexport { massageSelector, matchesSelector, filterInMemoryFields, createFieldSorter, rowFilter, isCombinationalField, getKey, getValue, getFieldFromDoc, setFieldInDoc, compare, parseField };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-selector-core/lib/index.es.js\n// module id = 3\n// module chunks = 0","import uuidV4 from 'uuid';\nimport Promise from 'pouchdb-promise';\nimport getArguments from 'argsarray';\nimport { Map } from 'pouchdb-collections';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport immediate from 'immediate';\nimport { BAD_REQUEST, INVALID_ID, MISSING_ID, RESERVED_ID, createError } from 'pouchdb-errors';\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new Map();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        immediate(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar assign$1 = assign;\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\nvar res$1 = res;\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\nfunction isCordova() {\n  return (typeof cordova !== \"undefined\" ||\n  typeof PhoneGap !== \"undefined\" ||\n  typeof phonegap !== \"undefined\");\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = uuidV4.v4;\n\nexport { adapterFun, assign$1 as assign, bulkGet as bulkGetShim, Changes as changesHandler, clone, defaultBackOff, explainError, filterChange, flatten, res$1 as functionName, guardedConsole, hasLocalStorage, invalidIdError, isChromeApp, isCordova, isRemote, listenerCount, immediate as nextTick, normalizeDesignDocFunctionName as normalizeDdocFunctionName, once, parseDesignDocFunctionName as parseDdocFunctionName, parseUri, pick, rev, scopeEval, toPromise, upsert, uuid };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-utils/lib/index-browser.es.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/argsarray/index.js\n// module id = 5\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 6\n// module chunks = 0","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/immediate/lib/browser.js\n// module id = 7\n// module chunks = 0","function mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\nexport { ExportedSet as Set, ExportedMap as Map };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-collections/lib/index.es.js\n// module id = 8\n// module chunks = 0","import lie from 'lie';\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nexport default PouchPromise;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-promise/lib/index.es.js\n// module id = 9\n// module chunks = 0","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lie/lib/browser.js\n// module id = 10\n// module chunks = 0","var thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\nfunction typedBuffer() {\n}\n\nexport { thisAtob as atob, thisBtoa as btoa, b64ToBluffer as base64StringToBlobOrBuffer, binaryStringToArrayBuffer, binStringToBluffer as binaryStringToBlobOrBuffer, createBlob as blob, blobToBase64 as blobOrBufferToBase64, blobToBinaryString as blobOrBufferToBinaryString, readAsArrayBuffer, readAsBinaryString, typedBuffer };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-binary-utils/lib/index-browser.es.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar selectorCore = require('pouchdb-selector-core');\nvar getKey = selectorCore.getKey;\nvar getFieldFromDoc = selectorCore.getFieldFromDoc;\nvar setFieldInDoc = selectorCore.setFieldInDoc;\nvar parseField = selectorCore.parseField;\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nexports.getUserFields = function(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(getKey) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(getKey)\n  };\n};\n\n// normalize the \"sort\" value\nexports.massageSort = function(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n};\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nexports.pick = function(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = parseField(arr[i]);\n    var value = getFieldFromDoc(obj, parsedField);\n    if (typeof value !== 'undefined') {\n      setFieldInDoc(res, parsedField, value);\n    }\n  }\n  return res;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-live-find/lib/utils.js\n// module id = 12\n// module chunks = 0","import { btoa, readAsArrayBuffer } from 'pouchdb-binary-utils';\nimport Md5 from 'spark-md5';\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return btoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nexport { binaryMd5, stringMd5 };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-md5/lib/index-browser.es.js\n// module id = 13\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 14\n// module chunks = 0","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spark-md5/spark-md5.js\n// module id = 15\n// module chunks = 0","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/index.js\n// module id = 16\n// module chunks = 0","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/bytesToUuid.js\n// module id = 17\n// module chunks = 0","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/rng-browser.js\n// module id = 18\n// module chunks = 0","import uuidV4 from 'uuid';\nimport lie from 'lie';\nimport getArguments from 'argsarray';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport nextTick from 'immediate';\nimport debug from 'debug';\nimport Md5 from 'spark-md5';\nimport vuvuzela from 'vuvuzela';\n\n/* istanbul ignore next */\nvar PouchPromise$1 = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise$1(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise$1.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise$1.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise$1(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (console !== 'undefined' && method in console) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\nfunction f() {}\n\nvar hasName = f.name;\nvar res;\n\n// We dont run coverage in IE\n/* istanbul ignore else */\nif (hasName) {\n  res = function (fun) {\n    return fun.name;\n  };\n} else {\n  res = function (fun) {\n    return fun.toString().match(/^\\s*function\\s*(\\S*)\\s*\\(/)[1];\n  };\n}\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise$1(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$2, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change);\n  };\n\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB$3._changesFilterPlugin) {\n    PouchDB$3._changesFilterPlugin.normalize(opts);\n    if (PouchDB$3._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB$3._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysQuery(api, opts, callback) {\n  var keys =  ('limit' in opts) ?\n      opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n      (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  if (opts.descending) {\n    keys.reverse();\n  }\n  if (!keys.length) {\n    return api._allDocs({limit: 0}, callback);\n  }\n  var finalResults = {\n    offset: opts.skip\n  };\n  return PouchPromise$1.all(keys.map(function (key) {\n    var subOpts = $inject_Object_assign({key: key, deleted: 'ok'}, opts);\n    ['limit', 'skip', 'keys'].forEach(function (optKey) {\n      delete subOpts[optKey];\n    });\n    return new PouchPromise$1(function (resolve, reject) {\n      api._allDocs(subOpts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        finalResults.total_rows = res.total_rows;\n        resolve(res.rows[0] || {key: key, error: 'not_found'});\n      });\n    });\n  })).then(function (results) {\n    finalResults.rows = results;\n    return finalResults;\n  });\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise$1.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      return allDocsKeysQuery(this, opts, callback);\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise$1.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$3.adapters;\n  var preferredAdapters = PouchDB$3.preferredAdapters;\n  var prefix = PouchDB$3.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB$3, AbstractPouchDB);\nfunction PouchDB$3(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$3)) {\n    return new PouchDB$3(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$3.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB$3.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB$3.adapters[opts.adapter] ||\n      !PouchDB$3.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$3.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$3.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$3.adapters = {};\nPouchDB$3.preferredAdapters = [];\n\nPouchDB$3.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB$3);\n\nPouchDB$3.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$3.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$3.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$3.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$3);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$3.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB$3.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB$3;\n};\n\nPouchDB$3.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB$3.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB$3);\n\n  PouchAlt.preferredAdapters = PouchDB$3.preferredAdapters.slice();\n  Object.keys(PouchDB$3).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$3[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.3.4\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = debug;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = debug('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$3.plugin(applyChangesFilterPlugin);\n\nPouchDB$3.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise$1.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise$1.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise$1(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n  var keyRangeError = keyRange && keyRange.error;\n  if (keyRangeError && !(keyRangeError.name === \"DataError\" &&\n      keyRangeError.code === 0)) {\n    // DataError with error code 0 indicates start is less than end, so\n    // can just do an empty query. Else need to throw\n    return callback(createError(IDB_ERROR,\n      keyRangeError.name, keyRangeError.message));\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (opts.deleted === 'ok') {\n      results.push(row);\n      // deleted docs are okay with \"keys\" requests\n      if (deleted) {\n        row.value.deleted = true;\n        row.doc = null;\n      } else if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    } else if (!deleted && skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    callback(null, {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    });\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise$1(function (resolve) {\n    var blob = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // some outdated implementations of IDB that appear on Samsung\n  // and HTC Android devices <4.4 are missing IDBKeyRange\n  return !isSafari && typeof indexedDB !== 'undefined' &&\n    typeof IDBKeyRange !== 'undefined';\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nvar IDBPouch = function (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n};\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n\n    var sqlArgs = [];\n    var criteria = [];\n\n    if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (opts.deleted !== 'ok') {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (opts.deleted === 'ok') {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              continue;\n            }\n          }\n          results.push(doc);\n        }\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      });\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = $inject_Object_assign({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nvar WebSqlPouch = function (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n};\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise$1(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise$1.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\nvar res$2 = function () {};\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      res$2(obj, resp);\n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise$1(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var atts = row.doc && row.doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise$1.resolve();\n  }\n\n  return PouchPromise$1.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise$1(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = userOpts.ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise$1.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise$1.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise$1.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise$1(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise$1.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise$1.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise$1.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nvar HttpPouch$1 = function (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n};\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise$1(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise$1(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise$1.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise$1.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise$1.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise$1.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise$1.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise$1.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise$1.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise$1.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise$1.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise$1.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise$1.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts;\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    if (this.readOnlySource) {\n      return PouchPromise$1.resolve(true);\n    }\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.readOnlySource = true;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise$1.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.readOnlySource) {\n      return PouchPromise$1.resolve(targetDoc.last_seq);\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.readOnlySource = true;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise$1.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise$1(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise$1.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          if (error.name === 'unauthorized' || error.name === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      if (fatalError.name === 'unauthorized' || fatalError.name === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise$1(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise$1.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      return {\n        from: function (other, opts, callback) {\n          return self.constructor.replicate(other, self, opts, callback);\n        },\n        to: function (other, opts, callback) {\n          return self.constructor.replicate(self, other, opts, callback);\n        }\n      };\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$3.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\nexport default PouchDB$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-browser/lib/index.es.js\n// module id = 19\n// module chunks = 0","import { assign, clone, isRemote, toPromise, upsert } from 'pouchdb-utils';\nimport Promise from 'pouchdb-promise';\nimport { compare, filterInMemoryFields, getFieldFromDoc, getKey, getValue, massageSelector, parseField, setFieldInDoc } from 'pouchdb-selector-core';\nimport abstractMapReduce from 'pouchdb-abstract-mapreduce';\nimport { collate } from 'pouchdb-collate';\nimport { stringMd5 } from 'pouchdb-md5';\n\n// we restucture the supplied JSON considerably, because the official\n// Mango API is very particular about a lot of this stuff, but we like\n// to be liberal with what we accept in order to prevent mental\n// breakdowns in our users\nfunction massageCreateIndexRequest(requestDef) {\n  requestDef = clone(requestDef);\n\n  if (!requestDef.index) {\n    requestDef.index = {};\n  }\n\n  ['type', 'name', 'ddoc'].forEach(function (key) {\n    if (requestDef.index[key]) {\n      requestDef[key] = requestDef.index[key];\n      delete requestDef.index[key];\n    }\n  });\n\n  if (requestDef.fields) {\n    requestDef.index.fields = requestDef.fields;\n    delete requestDef.fields;\n  }\n\n  if (!requestDef.type) {\n    requestDef.type = 'json';\n  }\n  return requestDef;\n}\n\nfunction createIndex(db, requestDef, callback) {\n  requestDef = massageCreateIndexRequest(requestDef);\n\n  db.request({\n    method: 'POST',\n    url: '_index',\n    body: requestDef\n  }, callback);\n}\n\nfunction find(db, requestDef, callback) {\n  db.request({\n    method: 'POST',\n    url: '_find',\n    body: requestDef\n  }, callback);\n}\n\nfunction explain(db, requestDef, callback) {\n  db.request({\n    method: 'POST',\n    url: '_explain',\n    body: requestDef\n  }, callback);\n}\n\nfunction getIndexes(db, callback) {\n  db.request({\n    method: 'GET',\n    url: '_index'\n  }, callback);\n}\n\nfunction deleteIndex(db, indexDef, callback) {\n\n\n  var ddoc = indexDef.ddoc;\n  var type = indexDef.type || 'json';\n  var name = indexDef.name;\n\n  if (!ddoc) {\n    return callback(new Error('you must provide an index\\'s ddoc'));\n  }\n\n  if (!name) {\n    return callback(new Error('you must provide an index\\'s name'));\n  }\n\n  var url = '_index/' + [ddoc, type, name].map(encodeURIComponent).join('/');\n\n  db.request({\n    method: 'DELETE',\n    url: url\n  }, callback);\n}\n\nfunction getArguments(fun) {\n  return function () {\n    var len = arguments.length;\n    var args = new Array(len);\n    var i = -1;\n    while (++i < len) {\n      args[i] = arguments[i];\n    }\n    return fun.call(this, args);\n  };\n}\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    promisedCallback(promise, cb);\n    return promise;\n  });\n}\n\nfunction promisedCallback(promise, callback) {\n  promise.then(function (res) {\n    process.nextTick(function () {\n      callback(null, res);\n    });\n  }, function (reason) {\n    process.nextTick(function () {\n      callback(reason);\n    });\n  });\n  return promise;\n}\n\nvar flatten = getArguments(function (args) {\n  var res = [];\n  for (var i = 0, len = args.length; i < len; i++) {\n    var subArr = args[i];\n    if (Array.isArray(subArr)) {\n      res = res.concat(flatten.apply(null, subArr));\n    } else {\n      res.push(subArr);\n    }\n  }\n  return res;\n});\n\nfunction mergeObjects(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res = assign(res, arr[i]);\n  }\n  return res;\n}\n\n// Selects a list of fields defined in dot notation from one doc\n// and copies them to a new doc. Like underscore _.pick but supports nesting.\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var parsedField = parseField(arr[i]);\n    var value = getFieldFromDoc(obj, parsedField);\n    if (typeof value !== 'undefined') {\n      setFieldInDoc(res, parsedField, value);\n    }\n  }\n  return res;\n}\n\n// e.g. ['a'], ['a', 'b'] is true, but ['b'], ['a', 'b'] is false\nfunction oneArrayIsSubArrayOfOther(left, right) {\n\n  for (var i = 0, len = Math.min(left.length, right.length); i < len; i++) {\n    if (left[i] !== right[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// e.g.['a', 'b', 'c'], ['a', 'b'] is false\nfunction oneArrayIsStrictSubArrayOfOther(left, right) {\n\n  if (left.length > right.length) {\n    return false;\n  }\n\n  return oneArrayIsSubArrayOfOther(left, right);\n}\n\n// same as above, but treat the left array as an unordered set\n// e.g. ['b', 'a'], ['a', 'b', 'c'] is true, but ['c'], ['a', 'b', 'c'] is false\nfunction oneSetIsSubArrayOfOther(left, right) {\n  left = left.slice();\n  for (var i = 0, len = right.length; i < len; i++) {\n    var field = right[i];\n    if (!left.length) {\n      break;\n    }\n    var leftIdx = left.indexOf(field);\n    if (leftIdx === -1) {\n      return false;\n    } else {\n      left.splice(leftIdx, 1);\n    }\n  }\n  return true;\n}\n\nfunction arrayToObject(arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res[arr[i]] = true;\n  }\n  return res;\n}\n\nfunction max(arr, fun) {\n  var max = null;\n  var maxScore = -1;\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var element = arr[i];\n    var score = fun(element);\n    if (score > maxScore) {\n      maxScore = score;\n      max = element;\n    }\n  }\n  return max;\n}\n\nfunction arrayEquals(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  for (var i = 0, len = arr1.length; i < len; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction uniq(arr) {\n  var obj = {};\n  for (var i = 0; i < arr.length; i++) {\n    obj['$' + arr[i]] = true;\n  }\n  return Object.keys(obj).map(function (key) {\n    return key.substring(1);\n  });\n}\n\n//\n// One thing about these mappers:\n//\n// Per the advice of John-David Dalton (http://youtu.be/NthmeLEhDDM),\n// what you want to do in this case is optimize for the smallest possible\n// function, since that's the thing that gets run over and over again.\n//\n// This code would be a lot simpler if all the if/elses were inside\n// the function, but it would also be a lot less performant.\n//\n\n\nfunction createDeepMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, iLen = fields.length; i < iLen; i++) {\n      var parsedField = parseField(fields[i]);\n      var value = doc;\n      for (var j = 0, jLen = parsedField.length; j < jLen; j++) {\n        var key = parsedField[j];\n        value = value[key];\n        if (!value) {\n          return; // don't emit\n        }\n      }\n      toEmit.push(value);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction createDeepSingleMapper(field, emit) {\n  var parsedField = parseField(field);\n  return function (doc) {\n    var value = doc;\n    for (var i = 0, len = parsedField.length; i < len; i++) {\n      var key = parsedField[i];\n      value = value[key];\n      if (!value) {\n        return; // do nothing\n      }\n    }\n    emit(value);\n  };\n}\n\nfunction createShallowSingleMapper(field, emit) {\n  return function (doc) {\n    emit(doc[field]);\n  };\n}\n\nfunction createShallowMultiMapper(fields, emit) {\n  return function (doc) {\n    var toEmit = [];\n    for (var i = 0, len = fields.length; i < len; i++) {\n      toEmit.push(doc[fields[i]]);\n    }\n    emit(toEmit);\n  };\n}\n\nfunction checkShallow(fields) {\n  for (var i = 0, len = fields.length; i < len; i++) {\n    var field = fields[i];\n    if (field.indexOf('.') !== -1) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction createMapper(fields, emit) {\n  var isShallow = checkShallow(fields);\n  var isSingle = fields.length === 1;\n\n  // notice we try to optimize for the most common case,\n  // i.e. single shallow indexes\n  if (isShallow) {\n    if (isSingle) {\n      return createShallowSingleMapper(fields[0], emit);\n    } else { // multi\n      return createShallowMultiMapper(fields, emit);\n    }\n  } else { // deep\n    if (isSingle) {\n      return createDeepSingleMapper(fields[0], emit);\n    } else { // multi\n      return createDeepMultiMapper(fields, emit);\n    }\n  }\n}\n\nfunction mapper(mapFunDef, emit) {\n  // mapFunDef is a list of fields\n\n  var fields = Object.keys(mapFunDef.fields);\n\n  return createMapper(fields, emit);\n}\n\n/* istanbul ignore next */\nfunction reducer(/*reduceFunDef*/) {\n  throw new Error('reduce not supported');\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var view = ddoc.views[viewName];\n  // This doesn't actually need to be here apparently, but\n  // I feel safer keeping it.\n  /* istanbul ignore if */\n  if (!view.map || !view.map.fields) {\n    throw new Error('ddoc ' + ddoc._id +' with view ' + viewName +\n      ' doesn\\'t have map.fields defined. ' +\n      'maybe it wasn\\'t created by this plugin?');\n  }\n}\n\nvar abstractMapper = abstractMapReduce(\n  /* localDocName */ 'indexes',\n  mapper,\n  reducer,\n  ddocValidator\n);\n\n// normalize the \"sort\" value\nfunction massageSort(sort) {\n  if (!Array.isArray(sort)) {\n    throw new Error('invalid sort json - should be an array');\n  }\n  return sort.map(function (sorting) {\n    if (typeof sorting === 'string') {\n      var obj = {};\n      obj[sorting] = 'asc';\n      return obj;\n    } else {\n      return sorting;\n    }\n  });\n}\n\nfunction massageUseIndex(useIndex) {\n  var cleanedUseIndex = [];\n  if (typeof useIndex === 'string') {\n    cleanedUseIndex.push(useIndex);\n  } else {\n    cleanedUseIndex = useIndex;\n  }\n\n  return cleanedUseIndex.map(function (name) {\n    return name.replace('_design/', '');\n  });\n}\n\nfunction massageIndexDef(indexDef) {\n  indexDef.fields = indexDef.fields.map(function (field) {\n    if (typeof field === 'string') {\n      var obj = {};\n      obj[field] = 'asc';\n      return obj;\n    }\n    return field;\n  });\n  return indexDef;\n}\n\nfunction getKeyFromDoc(doc, index) {\n  var res = [];\n  for (var i = 0; i < index.def.fields.length; i++) {\n    var field = getKey(index.def.fields[i]);\n    res.push(doc[field]);\n  }\n  return res;\n}\n\n// have to do this manually because REASONS. I don't know why\n// CouchDB didn't implement inclusive_start\nfunction filterInclusiveStart(rows, targetValue, index) {\n  var indexFields = index.def.fields;\n  for (var i = 0, len = rows.length; i < len; i++) {\n    var row = rows[i];\n\n    // shave off any docs at the beginning that are <= the\n    // target value\n\n    var docKey = getKeyFromDoc(row.doc, index);\n    if (indexFields.length === 1) {\n      docKey = docKey[0]; // only one field, not multi-field\n    } else { // more than one field in index\n      // in the case where e.g. the user is searching {$gt: {a: 1}}\n      // but the index is [a, b], then we need to shorten the doc key\n      while (docKey.length > targetValue.length) {\n        docKey.pop();\n      }\n    }\n    //ABS as we just looking for values that don't match\n    if (Math.abs(collate(docKey, targetValue)) > 0) {\n      // no need to filter any further; we're past the key\n      break;\n    }\n  }\n  return i > 0 ? rows.slice(i) : rows;\n}\n\nfunction reverseOptions(opts) {\n  var newOpts = clone(opts);\n  delete newOpts.startkey;\n  delete newOpts.endkey;\n  delete newOpts.inclusive_start;\n  delete newOpts.inclusive_end;\n\n  if ('endkey' in opts) {\n    newOpts.startkey = opts.endkey;\n  }\n  if ('startkey' in opts) {\n    newOpts.endkey = opts.startkey;\n  }\n  if ('inclusive_start' in opts) {\n    newOpts.inclusive_end = opts.inclusive_start;\n  }\n  if ('inclusive_end' in opts) {\n    newOpts.inclusive_start = opts.inclusive_end;\n  }\n  return newOpts;\n}\n\nfunction validateIndex(index) {\n  var ascFields = index.fields.filter(function (field) {\n    return getValue(field) === 'asc';\n  });\n  if (ascFields.length !== 0 && ascFields.length !== index.fields.length) {\n    throw new Error('unsupported mixed sorting');\n  }\n}\n\nfunction validateSort(requestDef, index) {\n  if (index.defaultUsed && requestDef.sort) {\n    var noneIdSorts = requestDef.sort.filter(function (sortItem) {\n      return Object.keys(sortItem)[0] !== '_id';\n    }).map(function (sortItem) {\n      return Object.keys(sortItem)[0];\n    });\n\n    if (noneIdSorts.length > 0) {\n      throw new Error('Cannot sort on field(s) \"' + noneIdSorts.join(',') +\n      '\" when using the default index');\n    }\n  }\n\n  if (index.defaultUsed) {\n    return;\n  }\n}\n\nfunction validateFindRequest(requestDef) {\n  if (typeof requestDef.selector !== 'object') {\n    throw new Error('you must provide a selector when you find()');\n  }\n\n  /*var selectors = requestDef.selector['$and'] || [requestDef.selector];\n  for (var i = 0; i < selectors.length; i++) {\n    var selector = selectors[i];\n    var keys = Object.keys(selector);\n    if (keys.length === 0) {\n      throw new Error('invalid empty selector');\n    }\n    //var selection = selector[keys[0]];\n    /*if (Object.keys(selection).length !== 1) {\n      throw new Error('invalid selector: ' + JSON.stringify(selection) +\n        ' - it must have exactly one key/value');\n    }\n  }*/\n}\n\n// determine the maximum number of fields\n// we're going to need to query, e.g. if the user\n// has selection ['a'] and sorting ['a', 'b'], then we\n// need to use the longer of the two: ['a', 'b']\nfunction getUserFields(selector, sort) {\n  var selectorFields = Object.keys(selector);\n  var sortFields = sort? sort.map(getKey) : [];\n  var userFields;\n  if (selectorFields.length >= sortFields.length) {\n    userFields = selectorFields;\n  } else {\n    userFields = sortFields;\n  }\n\n  if (sortFields.length === 0) {\n    return {\n      fields: userFields\n    };\n  }\n\n  // sort according to the user's preferred sorting\n  userFields = userFields.sort(function (left, right) {\n    var leftIdx = sortFields.indexOf(left);\n    if (leftIdx === -1) {\n      leftIdx = Number.MAX_VALUE;\n    }\n    var rightIdx = sortFields.indexOf(right);\n    if (rightIdx === -1) {\n      rightIdx = Number.MAX_VALUE;\n    }\n    return leftIdx < rightIdx ? -1 : leftIdx > rightIdx ? 1 : 0;\n  });\n\n  return {\n    fields: userFields,\n    sortOrder: sort.map(getKey)\n  };\n}\n\nfunction createIndex$1(db, requestDef) {\n  requestDef = massageCreateIndexRequest(requestDef);\n  var originalIndexDef = clone(requestDef.index);\n  requestDef.index = massageIndexDef(requestDef.index);\n\n  validateIndex(requestDef.index);\n\n  // calculating md5 is expensive - memoize and only\n  // run if required\n  var md5;\n  function getMd5() {\n    return md5 || (md5 = stringMd5(JSON.stringify(requestDef)));\n  }\n\n  var viewName = requestDef.name || ('idx-' + getMd5());\n\n  var ddocName = requestDef.ddoc || ('idx-' + getMd5());\n  var ddocId = '_design/' + ddocName;\n\n  var hasInvalidLanguage = false;\n  var viewExists = false;\n\n  function updateDdoc(doc) {\n    if (doc._rev && doc.language !== 'query') {\n      hasInvalidLanguage = true;\n    }\n    doc.language = 'query';\n    doc.views = doc.views || {};\n\n    viewExists = !!doc.views[viewName];\n\n    if (viewExists) {\n      return false;\n    }\n\n    doc.views[viewName] = {\n      map: {\n        fields: mergeObjects(requestDef.index.fields)\n      },\n      reduce: '_count',\n      options: {\n        def: originalIndexDef\n      }\n    };\n\n    return doc;\n  }\n\n  db.constructor.emit('debug', ['find', 'creating index', ddocId]);\n\n  return upsert(db, ddocId, updateDdoc).then(function () {\n    if (hasInvalidLanguage) {\n      throw new Error('invalid language for ddoc with id \"' +\n      ddocId +\n      '\" (should be \"query\")');\n    }\n  }).then(function () {\n    // kick off a build\n    // TODO: abstract-pouchdb-mapreduce should support auto-updating\n    // TODO: should also use update_after, but pouchdb/pouchdb#3415 blocks me\n    var signature = ddocName + '/' + viewName;\n    return abstractMapper.query.call(db, signature, {\n      limit: 0,\n      reduce: false\n    }).then(function () {\n      return {\n        id: ddocId,\n        name: viewName,\n        result: viewExists ? 'exists' : 'created'\n      };\n    });\n  });\n}\n\nfunction getIndexes$1(db) {\n  // just search through all the design docs and filter in-memory.\n  // hopefully there aren't that many ddocs.\n  return db.allDocs({\n    startkey: '_design/',\n    endkey: '_design/\\uffff',\n    include_docs: true\n  }).then(function (allDocsRes) {\n    var res = {\n      indexes: [{\n        ddoc: null,\n        name: '_all_docs',\n        type: 'special',\n        def: {\n          fields: [{_id: 'asc'}]\n        }\n      }]\n    };\n\n    res.indexes = flatten(res.indexes, allDocsRes.rows.filter(function (row) {\n      return row.doc.language === 'query';\n    }).map(function (row) {\n      var viewNames = row.doc.views !== undefined ? Object.keys(row.doc.views) : [];\n\n      return viewNames.map(function (viewName) {\n        var view = row.doc.views[viewName];\n        return {\n          ddoc: row.id,\n          name: viewName,\n          type: 'json',\n          def: massageIndexDef(view.options.def)\n        };\n      });\n    }));\n\n    // these are sorted by view name for some reason\n    res.indexes.sort(function (left, right) {\n      return compare(left.name, right.name);\n    });\n    res.total_rows = res.indexes.length;\n    return res;\n  });\n}\n\n// couchdb lowest collation value\nvar COLLATE_LO = null;\n\n// couchdb highest collation value (TODO: well not really, but close enough amirite)\nvar COLLATE_HI = {\"\\uffff\": {}};\n\n// couchdb second-lowest collation value\n\nfunction checkFieldInIndex(index, field) {\n  var indexFields = index.def.fields.map(getKey);\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n    if (field === indexField) {\n      return true;\n    }\n  }\n  return false;\n}\n\n// so when you do e.g. $eq/$eq, we can do it entirely in the database.\n// but when you do e.g. $gt/$eq, the first part can be done\n// in the database, but the second part has to be done in-memory,\n// because $gt has forced us to lose precision.\n// so that's what this determines\nfunction userOperatorLosesPrecision(selector, field) {\n  var matcher = selector[field];\n  var userOperator = getKey(matcher);\n\n  return userOperator !== '$eq';\n}\n\n// sort the user fields by their position in the index,\n// if they're in the index\nfunction sortFieldsByIndex(userFields, index) {\n  var indexFields = index.def.fields.map(getKey);\n\n  return userFields.slice().sort(function (a, b) {\n    var aIdx = indexFields.indexOf(a);\n    var bIdx = indexFields.indexOf(b);\n    if (aIdx === -1) {\n      aIdx = Number.MAX_VALUE;\n    }\n    if (bIdx === -1) {\n      bIdx = Number.MAX_VALUE;\n    }\n    return compare(aIdx, bIdx);\n  });\n}\n\n// first pass to try to find fields that will need to be sorted in-memory\nfunction getBasicInMemoryFields(index, selector, userFields) {\n\n  userFields = sortFieldsByIndex(userFields, index);\n\n  // check if any of the user selectors lose precision\n  var needToFilterInMemory = false;\n  for (var i = 0, len = userFields.length; i < len; i++) {\n    var field = userFields[i];\n    if (needToFilterInMemory || !checkFieldInIndex(index, field)) {\n      return userFields.slice(i);\n    }\n    if (i < len - 1 && userOperatorLosesPrecision(selector, field)) {\n      needToFilterInMemory = true;\n    }\n  }\n  return [];\n}\n\nfunction getInMemoryFieldsFromNe(selector) {\n  var fields = [];\n  Object.keys(selector).forEach(function (field) {\n    var matcher = selector[field];\n    Object.keys(matcher).forEach(function (operator) {\n      if (operator === '$ne') {\n        fields.push(field);\n      }\n    });\n  });\n  return fields;\n}\n\nfunction getInMemoryFields(coreInMemoryFields, index, selector, userFields) {\n  var result = flatten(\n    // in-memory fields reported as necessary by the query planner\n    coreInMemoryFields,\n    // combine with another pass that checks for any we may have missed\n    getBasicInMemoryFields(index, selector, userFields),\n    // combine with another pass that checks for $ne's\n    getInMemoryFieldsFromNe(selector)\n  );\n\n  return sortFieldsByIndex(uniq(result), index);\n}\n\n// check that at least one field in the user's query is represented\n// in the index. order matters in the case of sorts\nfunction checkIndexFieldsMatch(indexFields, sortOrder, fields) {\n  if (sortOrder) {\n    // array has to be a strict subarray of index array. furthermore,\n    // the sortOrder fields need to all be represented in the index\n    var sortMatches = oneArrayIsStrictSubArrayOfOther(sortOrder, indexFields);\n    var selectorMatches = oneArrayIsSubArrayOfOther(fields, indexFields);\n\n    return sortMatches && selectorMatches;\n  }\n\n  // all of the user's specified fields still need to be\n  // on the left side of the index array, although the order\n  // doesn't matter\n  return oneSetIsSubArrayOfOther(fields, indexFields);\n}\n\nvar logicalMatchers = ['$eq', '$gt', '$gte', '$lt', '$lte'];\nfunction isNonLogicalMatcher(matcher) {\n  return logicalMatchers.indexOf(matcher) === -1;\n}\n\n// check all the index fields for usages of '$ne'\n// e.g. if the user queries {foo: {$ne: 'foo'}, bar: {$eq: 'bar'}},\n// then we can neither use an index on ['foo'] nor an index on\n// ['foo', 'bar'], but we can use an index on ['bar'] or ['bar', 'foo']\nfunction checkFieldsLogicallySound(indexFields, selector) {\n  var firstField = indexFields[0];\n  var matcher = selector[firstField];\n\n  if (typeof matcher === 'undefined') {\n    return true;\n  }\n\n  var hasLogicalOperator = Object.keys(matcher).some(function (matcherKey) {\n    return !(isNonLogicalMatcher(matcherKey));\n  });\n\n  if (!hasLogicalOperator) {\n    return false;\n  }\n\n  var isInvalidNe = Object.keys(matcher).length === 1 &&\n    getKey(matcher) === '$ne';\n\n  return !isInvalidNe;\n}\n\nfunction checkIndexMatches(index, sortOrder, fields, selector) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var fieldsMatch = checkIndexFieldsMatch(indexFields, sortOrder, fields);\n\n  if (!fieldsMatch) {\n    return false;\n  }\n\n  return checkFieldsLogicallySound(indexFields, selector);\n}\n\n//\n// the algorithm is very simple:\n// take all the fields the user supplies, and if those fields\n// are a strict subset of the fields in some index,\n// then use that index\n//\n//\nfunction findMatchingIndexes(selector, userFields, sortOrder, indexes) {\n\n  return indexes.reduce(function (res, index) {\n    var indexMatches = checkIndexMatches(index, sortOrder, userFields, selector);\n    if (indexMatches) {\n      res.push(index);\n    }\n    return res;\n  }, []);\n}\n\n// find the best index, i.e. the one that matches the most fields\n// in the user's query\nfunction findBestMatchingIndex(selector, userFields, sortOrder, indexes, useIndex) {\n\n  var matchingIndexes = findMatchingIndexes(selector, userFields, sortOrder, indexes);\n\n  if (matchingIndexes.length === 0) {\n    if (useIndex) {\n      throw {\n        error: \"no_usable_index\",\n        message: \"There is no index available for this selector.\"\n      };\n    }\n    //return `all_docs` as a default index;\n    //I'm assuming that _all_docs is always first\n    var defaultIndex = indexes[0];\n    defaultIndex.defaultUsed = true;\n    return defaultIndex;\n  }\n  if (matchingIndexes.length === 1 && !useIndex) {\n    return matchingIndexes[0];\n  }\n\n  var userFieldsMap = arrayToObject(userFields);\n\n  function scoreIndex(index) {\n    var indexFields = index.def.fields.map(getKey);\n    var score = 0;\n    for (var i = 0, len = indexFields.length; i < len; i++) {\n      var indexField = indexFields[i];\n      if (userFieldsMap[indexField]) {\n        score++;\n      }\n    }\n    return score;\n  }\n\n  if (useIndex) {\n    var useIndexDdoc = '_design/' + useIndex[0];\n    var useIndexName = useIndex.length === 2 ? useIndex[1] : false;\n    var index = matchingIndexes.find(function (index) {\n      if (useIndexName && index.ddoc === useIndexDdoc && useIndexName === index.name) {\n        return true;\n      }\n\n      if (index.ddoc === useIndexDdoc) {\n        return true;\n      }\n\n      return false;\n    });\n\n    if (!index) {\n      throw {\n        error: \"unknown_error\",\n        message: \"Could not find that index or could not use that index for the query\"\n      };\n    }\n    return index;\n  }\n\n  return max(matchingIndexes, scoreIndex);\n}\n\nfunction getSingleFieldQueryOptsFor(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {key: userValue};\n    case '$lte':\n      return {endkey: userValue};\n    case '$gte':\n      return {startkey: userValue};\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getSingleFieldCoreQueryPlan(selector, index) {\n  var field = getKey(index.def.fields[0]);\n  //ignoring this because the test to exercise the branch is skipped at the moment\n  /* istanbul ignore next */\n  var matcher = selector[field] || {};\n  var inMemoryFields = [];\n\n  var userOperators = Object.keys(matcher);\n\n  var combinedOpts;\n\n  userOperators.forEach(function (userOperator) {\n\n    if (isNonLogicalMatcher(userOperator)) {\n      inMemoryFields.push(field);\n      return;\n    }\n\n    var userValue = matcher[userOperator];\n\n    var newQueryOpts = getSingleFieldQueryOptsFor(userOperator, userValue);\n\n    if (combinedOpts) {\n      combinedOpts = mergeObjects([combinedOpts, newQueryOpts]);\n    } else {\n      combinedOpts = newQueryOpts;\n    }\n  });\n\n  return {\n    queryOpts: combinedOpts,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getMultiFieldCoreQueryPlan(userOperator, userValue) {\n  switch (userOperator) {\n    case '$eq':\n      return {\n        startkey: userValue,\n        endkey: userValue\n      };\n    case '$lte':\n      return {\n        endkey: userValue\n      };\n    case '$gte':\n      return {\n        startkey: userValue\n      };\n    case '$lt':\n      return {\n        endkey: userValue,\n        inclusive_end: false\n      };\n    case '$gt':\n      return {\n        startkey: userValue,\n        inclusive_start: false\n      };\n  }\n}\n\nfunction getMultiFieldQueryOpts(selector, index) {\n\n  var indexFields = index.def.fields.map(getKey);\n\n  var inMemoryFields = [];\n  var startkey = [];\n  var endkey = [];\n  var inclusiveStart;\n  var inclusiveEnd;\n\n\n  function finish(i) {\n\n    if (inclusiveStart !== false) {\n      startkey.push(COLLATE_LO);\n    }\n    if (inclusiveEnd !== false) {\n      endkey.push(COLLATE_HI);\n    }\n    // keep track of the fields where we lost specificity,\n    // and therefore need to filter in-memory\n    inMemoryFields = indexFields.slice(i);\n  }\n\n  for (var i = 0, len = indexFields.length; i < len; i++) {\n    var indexField = indexFields[i];\n\n    var matcher = selector[indexField];\n\n    if (!matcher || !Object.keys(matcher).length) { // fewer fields in user query than in index\n      finish(i);\n      break;\n    } else if (i > 0) {\n      if (Object.keys(matcher).some(isNonLogicalMatcher)) { // non-logical are ignored\n        finish(i);\n        break;\n      }\n      var usingGtlt = (\n        '$gt' in matcher || '$gte' in matcher ||\n        '$lt' in matcher || '$lte' in matcher);\n      var previousKeys = Object.keys(selector[indexFields[i - 1]]);\n      var previousWasEq = arrayEquals(previousKeys, ['$eq']);\n      var previousWasSame = arrayEquals(previousKeys, Object.keys(matcher));\n      var gtltLostSpecificity = usingGtlt && !previousWasEq && !previousWasSame;\n      if (gtltLostSpecificity) {\n        finish(i);\n        break;\n      }\n    }\n\n    var userOperators = Object.keys(matcher);\n\n    var combinedOpts = null;\n\n    for (var j = 0; j < userOperators.length; j++) {\n      var userOperator = userOperators[j];\n      var userValue = matcher[userOperator];\n\n      var newOpts = getMultiFieldCoreQueryPlan(userOperator, userValue);\n\n      if (combinedOpts) {\n        combinedOpts = mergeObjects([combinedOpts, newOpts]);\n      } else {\n        combinedOpts = newOpts;\n      }\n    }\n\n    startkey.push('startkey' in combinedOpts ? combinedOpts.startkey : COLLATE_LO);\n    endkey.push('endkey' in combinedOpts ? combinedOpts.endkey : COLLATE_HI);\n    if ('inclusive_start' in combinedOpts) {\n      inclusiveStart = combinedOpts.inclusive_start;\n    }\n    if ('inclusive_end' in combinedOpts) {\n      inclusiveEnd = combinedOpts.inclusive_end;\n    }\n  }\n\n  var res = {\n    startkey: startkey,\n    endkey: endkey\n  };\n\n  if (typeof inclusiveStart !== 'undefined') {\n    res.inclusive_start = inclusiveStart;\n  }\n  if (typeof inclusiveEnd !== 'undefined') {\n    res.inclusive_end = inclusiveEnd;\n  }\n\n  return {\n    queryOpts: res,\n    inMemoryFields: inMemoryFields\n  };\n}\n\nfunction getDefaultQueryPlan(selector) {\n  //using default index, so all fields need to be done in memory\n  return {\n    queryOpts: {startkey: null},\n    inMemoryFields: [Object.keys(selector)]\n  };\n}\n\nfunction getCoreQueryPlan(selector, index) {\n  if (index.defaultUsed) {\n    return getDefaultQueryPlan(selector, index);\n  }\n\n  if (index.def.fields.length === 1) {\n    // one field in index, so the value was indexed as a singleton\n    return getSingleFieldCoreQueryPlan(selector, index);\n  }\n  // else index has multiple fields, so the value was indexed as an array\n  return getMultiFieldQueryOpts(selector, index);\n}\n\nfunction planQuery(request, indexes) {\n\n  var selector = request.selector;\n  var sort = request.sort;\n\n  var userFieldsRes = getUserFields(selector, sort);\n\n  var userFields = userFieldsRes.fields;\n  var sortOrder = userFieldsRes.sortOrder;\n  var index = findBestMatchingIndex(selector, userFields, sortOrder, indexes, request.use_index);\n\n  var coreQueryPlan = getCoreQueryPlan(selector, index);\n  var queryOpts = coreQueryPlan.queryOpts;\n  var coreInMemoryFields = coreQueryPlan.inMemoryFields;\n\n  var inMemoryFields = getInMemoryFields(coreInMemoryFields, index, selector, userFields);\n\n  var res = {\n    queryOpts: queryOpts,\n    index: index,\n    inMemoryFields: inMemoryFields\n  };\n  return res;\n}\n\nfunction indexToSignature(index) {\n  // remove '_design/'\n  return index.ddoc.substring(8) + '/' + index.name;\n}\n\nfunction doAllDocs(db, originalOpts) {\n  var opts = clone(originalOpts);\n\n  // CouchDB responds in weird ways when you provide a non-string to _id;\n  // we mimic the behavior for consistency. See issue66 tests for details.\n\n  if (opts.descending) {\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.endkey = '';\n    }\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.limit = 0;\n    }\n  } else {\n    if ('startkey' in opts && typeof opts.startkey !== 'string') {\n      opts.startkey = '';\n    }\n    if ('endkey' in opts && typeof opts.endkey !== 'string') {\n      opts.limit = 0;\n    }\n  }\n  if ('key' in opts && typeof opts.key !== 'string') {\n    opts.limit = 0;\n  }\n\n  return db.allDocs(opts)\n  .then(function (res) {\n    // filter out any design docs that _all_docs might return\n    res.rows = res.rows.filter(function (row) {\n      return !/^_design\\//.test(row.id);\n    });\n    return res;\n  });\n}\n\nfunction find$1(db, requestDef, explain) {\n  if (requestDef.selector) {\n    requestDef.selector = massageSelector(requestDef.selector);\n  }\n\n  if (requestDef.sort) {\n    requestDef.sort = massageSort(requestDef.sort);\n  }\n\n  if (requestDef.use_index) {\n    requestDef.use_index = massageUseIndex(requestDef.use_index);\n  }\n\n  validateFindRequest(requestDef);\n\n  return getIndexes$1(db).then(function (getIndexesRes) {\n\n    db.constructor.emit('debug', ['find', 'planning query', requestDef]);\n    var queryPlan = planQuery(requestDef, getIndexesRes.indexes);\n    db.constructor.emit('debug', ['find', 'query plan', queryPlan]);\n\n    var indexToUse = queryPlan.index;\n\n    validateSort(requestDef, indexToUse);\n\n    var opts = assign({\n      include_docs: true,\n      reduce: false\n    }, queryPlan.queryOpts);\n\n    if ('startkey' in opts && 'endkey' in opts &&\n        collate(opts.startkey, opts.endkey) > 0) {\n      // can't possibly return any results, startkey > endkey\n      return {docs: []};\n    }\n\n    var isDescending = requestDef.sort &&\n      typeof requestDef.sort[0] !== 'string' &&\n      getValue(requestDef.sort[0]) === 'desc';\n\n    if (isDescending) {\n      // either all descending or all ascending\n      opts.descending = true;\n      opts = reverseOptions(opts);\n    }\n\n    if (!queryPlan.inMemoryFields.length) {\n      // no in-memory filtering necessary, so we can let the\n      // database do the limit/skip for us\n      if ('limit' in requestDef) {\n        opts.limit = requestDef.limit;\n      }\n      if ('skip' in requestDef) {\n        opts.skip = requestDef.skip;\n      }\n    }\n\n    if (explain) {\n      return Promise.resolve(queryPlan, opts);\n    }\n\n    return Promise.resolve().then(function () {\n      if (indexToUse.name === '_all_docs') {\n        return doAllDocs(db, opts);\n      } else {\n        var signature = indexToSignature(indexToUse);\n        return abstractMapper.query.call(db, signature, opts);\n      }\n    }).then(function (res) {\n      if (opts.inclusive_start === false) {\n        // may have to manually filter the first one,\n        // since couchdb has no true inclusive_start option\n        res.rows = filterInclusiveStart(res.rows, opts.startkey, indexToUse);\n      }\n\n      if (queryPlan.inMemoryFields.length) {\n        // need to filter some stuff in-memory\n        res.rows = filterInMemoryFields(res.rows, requestDef, queryPlan.inMemoryFields);\n      }\n\n      var resp = {\n        docs: res.rows.map(function (row) {\n          var doc = row.doc;\n          if (requestDef.fields) {\n            return pick(doc, requestDef.fields);\n          }\n          return doc;\n        })\n      };\n\n      if (indexToUse.defaultUsed) {\n        resp.warning = 'no matching index found, create an index to optimize query time';\n      }\n\n      return resp;\n    });\n  });\n}\n\nfunction explain$1(db, requestDef) {\n  return find$1(db, requestDef, true)\n  .then(function (queryPlan) {\n    return {\n      dbname: db.name,\n      index: queryPlan.index,\n      selector: requestDef.selector,\n      range: {\n        start_key: queryPlan.queryOpts.startkey,\n        end_key: queryPlan.queryOpts.endkey,\n      },\n      opts: {\n        use_index: requestDef.use_index || [],\n        bookmark: \"nil\", //hardcoded to match CouchDB since its not supported,\n        limit: requestDef.limit,\n        skip: requestDef.skip,\n        sort: requestDef.sort || {},\n        fields: requestDef.fields,\n        conflicts: false, //hardcoded to match CouchDB since its not supported,\n        r: [49], // hardcoded to match CouchDB since its not support\n      },\n      limit: requestDef.limit,\n      skip: requestDef.skip || 0,\n      fields: requestDef.fields,\n    };\n  });\n}\n\nfunction deleteIndex$1(db, index) {\n\n  if (!index.ddoc) {\n    throw new Error('you must supply an index.ddoc when deleting');\n  }\n\n  if (!index.name) {\n    throw new Error('you must supply an index.name when deleting');\n  }\n\n  var docId = index.ddoc;\n  var viewName = index.name;\n\n  function deltaFun(doc) {\n    if (Object.keys(doc.views).length === 1 && doc.views[viewName]) {\n      // only one view in this ddoc, delete the whole ddoc\n      return {_id: docId, _deleted: true};\n    }\n    // more than one view here, just remove the view\n    delete doc.views[viewName];\n    return doc;\n  }\n\n  return upsert(db, docId, deltaFun).then(function () {\n    return abstractMapper.viewCleanup.apply(db);\n  }).then(function () {\n    return {ok: true};\n  });\n}\n\nvar createIndexAsCallback = callbackify(createIndex$1);\nvar findAsCallback = callbackify(find$1);\nvar explainAsCallback = callbackify(explain$1);\nvar getIndexesAsCallback = callbackify(getIndexes$1);\nvar deleteIndexAsCallback = callbackify(deleteIndex$1);\n\nvar plugin = {};\nplugin.createIndex = toPromise(function (requestDef, callback) {\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide an index to create'));\n  }\n\n  var createIndex$$1 = isRemote(this) ?\n    createIndex : createIndexAsCallback;\n  createIndex$$1(this, requestDef, callback);\n});\n\nplugin.find = toPromise(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to find()'));\n  }\n\n  var find$$1 = isRemote(this) ? find : findAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.explain = toPromise(function (requestDef, callback) {\n\n  if (typeof callback === 'undefined') {\n    callback = requestDef;\n    requestDef = undefined;\n  }\n\n  if (typeof requestDef !== 'object') {\n    return callback(new Error('you must provide search parameters to explain()'));\n  }\n\n  var find$$1 = isRemote(this) ? explain : explainAsCallback;\n  find$$1(this, requestDef, callback);\n});\n\nplugin.getIndexes = toPromise(function (callback) {\n\n  var getIndexes$$1 = isRemote(this) ? getIndexes : getIndexesAsCallback;\n  getIndexes$$1(this, callback);\n});\n\nplugin.deleteIndex = toPromise(function (indexDef, callback) {\n\n  if (typeof indexDef !== 'object') {\n    return callback(new Error('you must provide an index to delete'));\n  }\n\n  var deleteIndex$$1 = isRemote(this) ?\n    deleteIndex : deleteIndexAsCallback;\n  deleteIndex$$1(this, indexDef, callback);\n});\n\nexport default plugin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-find/lib/index-browser.es.js\n// module id = 20\n// module chunks = 0","'use strict';\nvar EventEmitter = require('events');\nvar helpers = require('./helpers');\nvar collate = require('pouchdb-collate').collate;\nvar selectorCore = require('pouchdb-selector-core');\nvar utils = require('./utils');\nvar getValue = selectorCore.getValue;\nvar massageSelector = selectorCore.massageSelector;\nvar massageSort = utils.massageSort;\n\nfunction liveFind(requestDef) {\n\n  if(typeof this.find !== 'function') {\n    throw new Error('ERROR: PouchDB Find is a requirement for LiveFind and must be loaded first.');\n  }\n\n  var db = this;\n  var cancelled = false;\n  var lookup = {};\n  var emitter = new EventEmitter();\n  var docList = [];\n  var aggregate = requestDef.aggregate || false;\n\n  // Normalize the request options\n  var fields = requestDef.fields;\n  var stripId = false, stripRev = false;\n  if(fields) {\n    // _id is a necessary field to process the docs\n    if(fields.indexOf('_id') === -1) {\n      fields.unshift('_id');\n      stripId = true;\n    }\n    // We need the _rev to sort out changes but can strip it later\n    if(fields.indexOf('_rev') === -1) {\n      fields.push('_rev');\n      stripRev = true;\n    }\n  }\n  var selector;\n  if(requestDef.selector) {\n    selector = massageSelector(requestDef.selector);\n  }\n  var sort, sortFn;\n  if(requestDef.sort) {\n    sort = massageSort(requestDef.sort);\n    sortFn = helpers.createFieldSorter(sort);\n  }\n  var skip = parseInt(requestDef.skip, 10) || 0;\n  var limit = parseInt(requestDef.limit, 10) || 0;\n  var findRequest = {\n    selector: selector,\n    // sort: sort,\n    fields: fields\n  };\n\n  var ready = db.find(findRequest)\n    .then(function(results) {\n      results.docs.forEach(function(doc) {\n        addResult(doc);\n      });\n      emitter.emit('ready');\n    })\n    .catch(function(err) {\n      emitter.emit('error', err);\n      cancel();\n      throw err;\n    });\n\n  // We will use just one change listener for all live queries.\n  // We need to keep track of how many queries are running.\n  // When the last live query finishes we will cancel the listener.\n  if(!db._changeListener) {\n    listen();\n  }\n  if(!db._activeQueries) {\n    db._activeQueries = 1;\n  } else {\n    db._activeQueries++;\n  }\n\n  db._changeListener\n    .on('change', changeHandler)\n    .on('error', errorHandler);\n\n  emitter.cancel = cancel;\n  // Bind the `find` query promise to our emitter object\n  // so we know when the initial query is done and can catch errors\n  emitter.then = ready.then.bind(ready);\n  emitter.catch = ready.catch.bind(ready);\n\n  emitter.sort = function(list) {\n    if(!sort) {\n      return list;\n    }\n    return sortList(list);\n  };\n\n  emitter.paginate = paginate;\n\n  function changeHandler(change) {\n    ready.then(function() {\n      if(change.doc) {\n        processChange(change.doc);\n      }\n    });\n  }\n\n  function errorHandler(err) {\n    emitter.emit('error', err);\n  }\n\n  function cancel() {\n    if(!cancelled) {\n      db._activeQueries --;\n      if(!db._activeQueries) {\n        db._changeListener.cancel();\n        delete db._changeListener;\n      } else {\n        db._changeListener.removeListener('change', changeHandler);\n        db._changeListener.removeListener('error', errorHandler);\n      }\n      emitter.emit('cancelled');\n      emitter.removeAllListeners();\n      cancelled = true;\n    }\n  }\n\n  function listen() {\n    db._changeListener = db.changes({live: true, retry: true, include_docs: true, since: 'now'});\n  }\n\n  function filterDoc(doc) {\n    var result = helpers.memoryFilter([doc], {selector: selector});\n    if(result.length) {\n      return result[0];\n    }\n    return null;\n  }\n\n  function pickFields(doc) {\n    if (fields) {\n      var output = utils.pick(doc, fields);\n      if(stripId) {\n        delete output._id;\n      }\n      if(stripRev) {\n        delete output._rev;\n      }\n      return output;\n    }\n    return doc;\n  }\n\n  // This processes the initial results of the query\n  function addResult(doc) {\n    lookup[doc._id] = doc._rev;\n    var id = doc._id;\n    var rev = doc._rev;\n    if(stripId) {\n      delete doc._id;\n    }\n    if(stripRev) {\n      delete doc._rev;\n    }\n    return addAction(doc, id, rev);\n  }\n\n  function processChange(doc) {\n    // Don't fire an update if this rev has already been processed\n    if(lookup[doc._id] === doc._rev) {\n      // console.warn('A change was fired twice. This shouldn\\'t happen.');\n      return;\n    }\n    var id = doc._id;\n    var rev = doc._rev;\n    if(doc._deleted && lookup[id]) {\n      lookup[id] = null;\n      return removeAction({_id: id, _rev: rev, deleted: true}, id, rev);\n    }\n    var outputDoc = filterDoc(doc);\n    if(!outputDoc && lookup[id]) {\n      lookup[id] = null;\n      return removeAction({_id: id, _rev: rev}, id, rev);\n    }\n    if(outputDoc && !lookup[id]) {\n      lookup[id] = rev;\n      return addAction(pickFields(outputDoc), id, rev);\n    }\n    if(outputDoc && lookup[id]) {\n      lookup[id] = rev;\n      return updateAction(pickFields(outputDoc), id, rev);\n    }\n  }\n\n  function removeAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.filter(function(item) {\n        return item._id !== doc._id;\n      });\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'REMOVE', id: id, rev: rev, doc: doc }, list);\n  }\n\n  function addAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.concat(doc);\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'ADD', id: id, rev: rev, doc: doc }, list);\n  }\n\n  function updateAction(doc, id, rev) {\n    var list;\n    if(aggregate) {\n      docList = docList.map(function(item) {\n        return item._id === doc._id ? doc : item;\n      });\n      list = formatList(docList);\n    }\n    emitter.emit('update', { action: 'UPDATE', id: id, rev: rev, doc: doc }, list);\n  }\n\n  /* function sortList(list) {\n    list = list.sort(sortFn);\n    if (typeof sort[0] !== 'string' &&\n      getValue(sort[0]) === 'desc') {\n      list = list.reverse();\n    }\n    return list;\n  } */\n\n  function sortList(list) {\n    return list.sort(sortFn);\n  }\n\n  // Applies sort, skip, and limit to a list\n  function formatList(list) {\n    if(sort) {\n      list = sortList(list);\n    }\n    if(skip || limit) {\n      if(limit) {\n        list = list.slice(skip, skip + limit);\n      } else {\n        list = list.slice(skip);\n      }\n    }\n    return list;\n  }\n\n  function paginate(options) {\n    if(!aggregate || !options || typeof options !== 'object') {\n      return;\n    }\n    if(options.skip != null) {\n      skip = parseInt(options.skip, 10) || 0;\n    }\n    if(options.limit != null) {\n      limit = parseInt(options.limit, 10) || 0;\n    }\n    if(options.sort && options.sort instanceof Array) {\n      sort = massageSort(options.sort);\n      sortFn = helpers.createFieldSorter(sort);\n    }\n    return formatList(docList);\n  }\n\n  return emitter;\n\n}\n\nexports.liveFind = liveFind;\n\nif (typeof window !== 'undefined' && window.PouchDB) {\n  window.PouchDB.plugin(exports);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-live-find/lib/index.js\n// module id = 21\n// module chunks = 0","(function () {\n  var vue = null;\n  var pouch = null;\n  var defaultDB = null;\n  var defaultUsername = null;\n  var defaultPassword = null;\n  var databases = {};\n  \n  var vuePouch = {\n    destroyed: function() {\n      Object.values(this._liveFinds).map(function(lf) { lf.cancel(); });\n    },\n    created: function() {\n      if (!vue) {\n        console.warn('[vue-pouch] not installed!')\n        return\n      }\n      var defineReactive = vue.util.defineReactive;\n      var vm = this;\n      vm._liveFinds = {};\n      \n      function fetchSession(database) {\n        if (['http','https'].indexOf(database.adapter) == -1) return;\n        database.getSession().then(function(res) {\n          return database.getUser(res.userCtx.name).then(function(res) {\n            vm.$pouch.session = res;\n          })\n        }).catch(function(error) {\n          vm.$pouch.authError = error\n        });\n      }\n      function login(database) {\n        if (['http','https'].indexOf(database.adapter) == -1) return;\n        database.login(defaultUsername, defaultPassword).then(function(res) {\n          vm.$pouch.session = res;\n          return database.getUser(defaultUsername).then(function(res) {\n            vm.$pouch.session = res;\n          })\n        }).catch(function(error) {\n          vm.$pouch.authError = error\n        })\n      }\n      function logout(database) {\n        database.logout()\n      }\n      \n      var $pouch = {\n        useAuth: function(username, password) {\n          defaultUsername = username;\n          defaultPassword = password;\n          for (var dbString in databases) {\n            if (!databases.hasOwnProperty(dbString)) continue;\n            login(databases[dbString]);\n          }\n          vm.$pouch.gotAuth = true;\n        },\n        createUser: function(username, password) {\n          defaultDB.signup(username, password).then(function(res) {\n            vm.$pouch.useAuth(username, password);\n          }).catch(function(error) {\n            vm.$pouch.authError = error;\n          })\n        },\n        resetAuth: function() {\n          defaultUsername = null;\n          defaultPassword = null;\n          vm.$pouch.gotAuth = false;\n          vm.$pouch.session = {}\n          if (defaultDB) defaultDB.logout()\n        },\n        sync: function(localDB, remoteDB, _options) {\n          if (!databases[localDB])  databases[localDB] = new pouch(localDB);\n          if (!databases[remoteDB]) databases[remoteDB] = new pouch(remoteDB);\n          if (!defaultDB) defaultDB = databases[remoteDB];\n          var options = Object.assign({}, _options, {live: true, retry: true})\n          var numPaused = 0;\n          vm.$pouch.loading[localDB] = true\n          // defineReactive(vm, '$pouch.ready', vm.$pouch.ready)\n          return pouch.sync(databases[localDB], databases[remoteDB], options)\n          .on('paused', function (err) {\n            if (err) {\n              vm.$pouch.errors[localDB] = err\n              vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)  \n              return;\n            }\n            numPaused += 1;\n            if (numPaused >= 2) {\n              vm.$pouch.loading[localDB] = false\n              vm.$pouch.loading = Object.assign({}, vm.$pouch.loading)\n            }\n          })\n          .on('active', function () {\n            // console.log('active callback')\n          })\n          .on('denied', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('denied callback')\n          })\n          .on('complete', function (info) {\n            // console.log('complete callback')\n          })\n          .on('error', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n          })\n          \n          fetchSession(databases[remoteDB]);\n        },\n        push: function(localDB, remoteDB, options) {\n          if (!databases[localDB])  databases[localDB] = new pouch(localDB);\n          if (!databases[remoteDB]) databases[remoteDB] = new pouch(remoteDB);\n          if (!defaultDB) defaultDB = databases[remoteDB];\n          fetchSession(databases[remoteDB]);\n          return databases[localDB].replicate.to(databases[remoteDB], options)\n          .on('paused', function (err) {\n            // console.log('paused callback')\n          })\n          .on('active', function () {\n            // console.log('active callback')\n          })\n          .on('denied', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('denied callback')\n          })\n          .on('complete', function (info) {\n            // console.log('complete callback')\n          })\n          .on('error', function (err) {\n            vm.$pouch.errors[localDB] = err\n            vm.$pouch.errors = Object.assign({}, vm.$pouch.errors)\n            // console.log('error callback')\n          })\n        },\n        put: function(db, object, options) {\n          return databases[db].put(object, options);\n        },\n        post: function(db, object, options) {\n          return databases[db].post(object, options);\n        },\n        remove: function(db, object, options) {\n          return databases[db].remove(object, options);\n        },\n        get: function(db, object, options) {\n          return databases[db].get(object, options);\n        },\n        session: {},\n        errors: {},\n        loading: {},\n        authError: null,\n        gotAuth: false\n      }\n      defineReactive(vm, '$pouch', $pouch);\n      vm.$databases = databases; // Add non-reactive property\n      \n      var pouchOptions = this.$options.pouch;\n      if (!pouchOptions) return;\n      if (typeof pouchOptions == 'function') pouchOptions = pouchOptions();\n      Object.keys(pouchOptions).map(function(key) {\n        var pouchFn = pouchOptions[key];\n        if (typeof pouchFn !== 'function') {\n          pouchFn = function() {\n            return pouchOptions[key];\n          }    \n        }\n        if (typeof vm.$data[key] == 'undefined') vm.$data[key] = null;\n        defineReactive(vm, key, null);\n        vm.$watch(pouchFn, function(config) {\n          if (!config) {\n            if (!vm[key]) vm[key] = []\n            return;\n          }\n          var selector, sort, skip, limit, first;\n          if (config.selector) {\n            selector = config.selector;\n            sort = config.sort;\n            skip = config.skip;\n            limit = config.limit;\n            first = config.first;\n          }\n          else {\n            selector = config\n          }\n          var databaseParam = config.database || key;\n          var db = null;\n          if (typeof databaseParam == 'object') {\n            db = databaseParam;\n          }\n          else if (typeof databaseParam == 'string') {\n            if (!databases[databaseParam]) {\n              databases[databaseParam] = new pouch(databaseParam);\n              if (vm.$pouch.gotAuth) login(databases[databaseParam]);\n            }\n            db = databases[databaseParam];\n          }\n          if (!db) return;\n          if (vm._liveFinds[key]) vm._liveFinds[key].cancel()\n          var aggregateCache = []\n          vm._liveFinds[key] = db.liveFind({\n            selector: selector, \n            sort: sort,\n            skip: skip,\n            limit: limit,\n            aggregate: true\n          }).on('update', function(update, aggregate) {\n            if (first && aggregate) aggregate = aggregate[0]\n            vm[key] = aggregateCache = aggregate;\n          }).on('ready', function() {\n            vm[key] = aggregateCache;\n          })\n        }, {\n          immediate: true\n        })\n      })\n    }\n  }\n  \n  function installSelectorReplicationPlugin() {\n    // This plugin enables selector-based replication\n    pouch.plugin(function(pouch) {\n      var oldReplicate = pouch.replicate\n      pouch.replicate = function(source, target, repOptions) {\n        var sourceAjax = source._ajax\n        source._ajax = function(ajaxOps, callback) {\n          if (ajaxOps.url.includes('_selector')) {\n            ajaxOps.url = ajaxOps.url.replace('filter=_selector%2F_selector', 'filter=_selector')\n            ajaxOps.method = 'POST'\n            ajaxOps.body = {\n              selector: repOptions.selector\n            }\n          }\n          return sourceAjax(ajaxOps, callback)\n        }\n        return oldReplicate(source, target, repOptions)\n      }\n    })\n  }\n  \n  var api = {\n    mixin: vuePouch,\n    install: function (Vue, options) {\n      vue = Vue;\n      pouch = (options && options.pouch) || PouchDB;\n      installSelectorReplicationPlugin()\n      defaultDB = (options && options.defaultDB);\n      Vue.options = Vue.util.mergeOptions(Vue.options, vuePouch);\n    }\n  }\n\n  if(typeof exports === 'object' && typeof module === 'object') {\n    module.exports = api\n  } else if(typeof define === 'function' && define.amd) {\n    define(function () { return api })\n  } else if (typeof window !== 'undefined') {\n    window.VuePouch = api\n  }\n})()\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-pouch/index.js\n// module id = 23\n// module chunks = 0","/*!\n * Vue.js v2.4.2\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(val);\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefix has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this) : parentVal\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn.call(this, parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (parentVal, childVal) {\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options) {\n  var inject = options.inject;\n  if (Array.isArray(inject)) {\n    var normalized = options.inject = {};\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = inject[i];\n    }\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeInject(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (comp.__esModule && comp.default) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listensers hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data && parentVnode.data.attrs;\n  vm.$listeners = listeners;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction checkOptionType (vm, name) {\n  var option = vm.$options[name];\n  if (!isPlainObject(option)) {\n    warn(\n      (\"component option \\\"\" + name + \"\\\" should be an object.\"),\n      vm\n    );\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedAttribute(key) || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'computed');\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter || noop, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'methods');\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  process.env.NODE_ENV !== 'production' && checkOptionType(vm, 'watch');\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  keyOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(keyOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    observerState.shouldConvert = false;\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    observerState.shouldConvert = true;\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (process.env.NODE_ENV !== 'production' && !source) {\n        warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    warn(\n      'Avoid using non-primitive value as key, ' +\n      'use string/number value instead.',\n      context\n    );\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      props = extend(extend({}, bindObject), props);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(ours, existing) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs, null, true);\n    defineReactive$$1(vm, '$listeners', vm.$options._parentListeners, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n  Vue.prototype._g = bindObjectListeners;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp, Array];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.4.2';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, elmToMove.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.elm = elm;\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (modelRs.exp) + \", \" + (modelRs.idx) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers) && modifiers.number) {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$options._renderChildren;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\"/>\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(lastTag, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !isReservedTag(el.tag); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data = el.plain ? undefined : genData$2(el, state);\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, state.warn)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, state.warn)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el, state) || 'void 0'\n      : genElement(el, state)) + \"}}\"\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return (altGenElement || genElement)(el$1, state)\n    }\n    var normalizationType = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 24\n// module chunks = 0","import Promise from 'pouchdb-promise';\nimport { Map, Set } from 'pouchdb-collections';\nimport { flatten, guardedConsole, isRemote, nextTick, upsert } from 'pouchdb-utils';\nimport { base64StringToBlobOrBuffer } from 'pouchdb-binary-utils';\nimport { collate, normalizeKey, parseIndexableString, toIndexableString } from 'pouchdb-collate';\nimport { stringMd5 } from 'pouchdb-md5';\nimport { BuiltInError, NotFoundError, QueryParseError, callbackify, fin, mapToKeysArray, promisedCallback, sequentialize, uniq } from 'pouchdb-mapreduce-utils';\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue();\nvar CHANGES_BATCH_SIZE = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = base64StringToBlobOrBuffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new Set();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new Map();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new Map();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new Map();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new Map();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new Set();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nexport default createAbstractMapReduce;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-abstract-mapreduce/lib/index.es.js\n// module id = 27\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window && typeof window.process !== 'undefined' && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document && 'WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window && window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-browser/~/debug/src/browser.js\n// module id = 28\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-browser/~/debug/src/debug.js\n// module id = 29\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000\nvar m = s * 60\nvar h = m * 60\nvar d = h * 24\nvar y = d * 365.25\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {}\n  var type = typeof val\n  if (type === 'string' && val.length > 0) {\n    return parse(val)\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ?\n\t\t\tfmtLong(val) :\n\t\t\tfmtShort(val)\n  }\n  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val))\n}\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str)\n  if (str.length > 10000) {\n    return\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str)\n  if (!match) {\n    return\n  }\n  var n = parseFloat(match[1])\n  var type = (match[2] || 'ms').toLowerCase()\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n\n    default:\n      return undefined\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd'\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h'\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm'\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's'\n  }\n  return ms + 'ms'\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms'\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's'\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-browser/~/ms/index.js\n// module id = 30\n// module chunks = 0","import inherits from 'inherits';\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nexport { UNAUTHORIZED, MISSING_BULK_DOCS, MISSING_DOC, REV_CONFLICT, INVALID_ID, MISSING_ID, RESERVED_ID, NOT_OPEN, UNKNOWN_ERROR, BAD_ARG, INVALID_REQUEST, QUERY_PARSE_ERROR, DOC_VALIDATION, BAD_REQUEST, NOT_AN_OBJECT, DB_MISSING, WSQ_ERROR, LDB_ERROR, FORBIDDEN, INVALID_REV, FILE_EXISTS, MISSING_STUB, IDB_ERROR, INVALID_URL, createError, generateErrorFromResponse };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-errors/lib/index.es.js\n// module id = 31\n// module chunks = 0","'use strict';\nvar collate = require('pouchdb-collate').collate;\nvar selectorCore = require('pouchdb-selector-core');\nvar filterInMemoryFields = selectorCore.filterInMemoryFields;\nvar utils = require('./utils');\nvar compare = selectorCore.compare;\nvar getUserFields = utils.getUserFields;\nvar getKey = selectorCore.getKey;\nvar getValue = selectorCore.getValue;\nvar parseField = selectorCore.parseField;\n\nexports.memoryFilter = function(docs, requestDef) {\n  var userFieldsRes = getUserFields(requestDef.selector, requestDef.sort);\n  var userFields = userFieldsRes.fields;\n  var rows = docs.map(function(doc) { return {doc: doc}; });\n  return filterInMemoryFields(rows, requestDef, userFields)\n    .map(function(row) {\n      return row.doc;\n    });\n};\n\n// create a comparator based on the sort object\nexports.createFieldSorter = function(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  var directions = sort.map(function(sorting) {\n    if (typeof sorting !== 'string' &&\n      getValue(sorting) === 'desc') {\n      return -1;\n    }\n    return 1;\n  });\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow);\n    var bFieldValues = getFieldValuesAsArray(bRow);\n    for(var i=0, len=directions.length; i<len; i++) {\n      var collation = collate(aFieldValues[i], bFieldValues[i]);\n      if (collation !== 0) {\n        return collation * directions[i];\n      }\n    }\n    // this is what mango seems to do\n    return compare(aRow._id, bRow._id) * directions[0];\n  };\n};\n\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-live-find/lib/helpers.js\n// module id = 32\n// module chunks = 0","import { Set } from 'pouchdb-collections';\nimport argsarray from 'argsarray';\nimport { nextTick } from 'pouchdb-utils';\nimport inherits from 'inherits';\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return argsarray(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new Set(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nexport { uniq, sequentialize, fin, callbackify, promisedCallback, mapToKeysArray, QueryParseError, NotFoundError, BuiltInError };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb-mapreduce-utils/lib/index.es.js\n// module id = 33\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v1.js\n// module id = 34\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v4.js\n// module id = 35\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 36\n// module chunks = 0","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuvuzela/index.js\n// module id = 38\n// module chunks = 0"],"sourceRoot":""}